{"version":3,"sources":["components/TerminalText.js","components/MessageBubble.js","store/actionTypes.js","consts.js","screens/Conversation.js","store/actions/conversationActions.js","socket.js","components/ConversationCard.js","screens/ConversationRouter.js","store/actions/socketActions.js","screens/LoginScreen.js","store/actions/accountActions.js","screens/NewConversation.js","components/UserStatus.js","components/SocketStatus.js","App.js","theme.js","store/reducers/accountReducer.js","store/reducers/conversationReducer.js","store/reducers/socketReducer.js","store/reducers/index.js","index.js","store/index.js"],"names":["useStyles","makeStyles","theme","terminal","fontFamily","fontWeight","fontSize","TerminalText","prefix","color","children","style","classes","className","line","marginBottom","marginTop","display","alignItems","overflowWrap","gridGap","bubble","gridArea","name","flexDirection","justifyContent","none","MessageBubble","yourName","targetName","content","time","direction","outbound","formattedTime","toString","substr","gridTemplateAreas","gridTemplateColumns","textAlign","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","SELECT_CONVERSATION","CLEAR_SELECT_CONVERSATION","CONVERSATION_RECEIVED_MESSAGE","FETCH_CONVERSATION_REQUEST","FETCH_CONVERSATION_SUCCESS","FETCH_CONVERSATION_FAILURE","FETCH_CURRENT_MESSAGES_REQUEST","FETCH_CURRENT_MESSAGES_SUCCESS","FETCH_CURRENT_MESSAGES_FAILURE","SOCKET_REQUEST","SOCKET_CONNECT","SOCKET_FAILURE","BACKEND_URL","root","flexGrow","position","socketDown","width","height","background","head","paddingBottom","paddingLeft","paddingRight","gridColumnGap","paper","padding","gridTemplateRows","messages","overflowX","overflowY","inputBar","paddingTop","backdrop","zIndex","drawer","connect","state","currentUser","account","user","conversation","currentConversation","loading","socket","socketConnection","socketConnected","connected","dispatch","onReceivedMessage","message","payload","type","id","user_id","clearSelectConversation","fetchCurrentMessages","conversationId","onSuccess","onError","a","token","localStorage","getItem","axios","get","headers","response","data","success","console","warn","withSnackbar","enqueueSnackbar","history","useHistory","React","useState","text","setText","channel","setChannel","inputRef","useRef","useEffect","variant","push","onReceivedMessageCallback","join","receive","responsePayload","log","on","joinChannel","leave","Backdrop","open","CircularProgress","to","title","Divider","map","onSubmit","e","preventDefault","focus","noValidate","autoComplete","TextField","autoFocus","value","onChange","event","target","IconButton","aria-label","margin","size","backgroundColor","selectConversation","onClick","overflow","maxHeight","conversations","fetchConversations","Error","match","useRouteMatch","path","length","convs","connectSocket","Socket","params","createAndConnectSocket","minHeight","doLogin","secretCode","password","post","loginResponse","userResponse","doAutoLogin","props","setCode","setPass","label","Button","startConversation","conversation_id","button","userName","logged","ORANGE","status","main","appBar","appToolbar","alignContent","toolbarTitle","flexShrink","drawerPaper","drawerContainer","drawerHeader","spacing","mixins","toolbar","menuButton","hide","doLogout","setOpen","handleDrawerOpen","handleDrawerClose","menuLink","icon","ListItem","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","Toolbar","edge","Typography","flex","SwipeableDrawer","anchor","onOpen","onClose","List","Fragment","Container","component","maxWidth","createMuiTheme","palette","secondary","error","red","A400","default","typography","INITIAL_STATE","accountReducer","action","setItem","removeItem","sortMessages","_","orderBy","conversationReducer","socketReducer","combineReducers","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","compose","createStore","rootReducer","configureStore","registerServiceWorker","navigator","window","addEventListener","serviceWorker","register","then","registration","catch","err","ReactDOM","render","ThemeProvider","maxSnack","document","querySelector"],"mappings":"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","file":"static/js/main.9170981c.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  terminal: {\n    fontFamily: 'VCRMono',\n    fontWeight: 100,\n    fontSize: 16\n  }\n}))\n\nexport default function TerminalText ({ prefix, color, children, style = {} }) {\n  const classes = useStyles()\n  return (\n    <span className={classes.terminal} style={{ ...style, color: color || '#fff' }}>\n      {prefix}{children}\n    </span>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport TerminalText from './TerminalText'\n\nconst useStyles = makeStyles((theme) => ({\n  line: {\n    marginBottom: 4,\n    marginTop: 4,\n    display: 'grid',\n    alignItems: 'flex-start',\n    overflowWrap: 'anywhere',\n    gridGap: 10\n  },\n  bubble: {\n    gridArea: 'bubble',\n    color: '#fff'\n  },\n  name: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    gridArea: 'name',\n    overflowWrap: 'anywhere'\n  },\n  none: {\n    gridArea: 'none',\n  }\n}))\n\nfunction MessageBubble ({ yourName, targetName, content, time, direction }) {\n  const classes = useStyles()\n  const outbound = direction === 'out'\n\n  const normalStyle = {\n    gridTemplateAreas: '\"name bubble none\"',\n    gridTemplateColumns: 'auto minmax(min-content, 100%) auto',\n    textAlign: 'left'\n  }\n  const outboundStyle = {\n    gridTemplateAreas: '\"none bubble name\"',\n    gridTemplateColumns: 'auto minmax(min-content, 100%) auto',\n    textAlign: 'right'\n  }\n  const color = outbound ? '#b55f5f' : '#b58f5f'\n  const formattedTime = time.toString().substr(10)\n\n  return (\n    <div className={classes.line} style={outbound ? outboundStyle : normalStyle}>\n      <div className={classes.bubble}>\n        <TerminalText style={{ fontWeight: 100 }}>{content}</TerminalText>\n      </div>\n      <div className={classes.name}>\n        <TerminalText color={color} style={{ fontWeight: 500 }}>\n          {outbound ? '@' + yourName : '@' + targetName}\n        </TerminalText>\n        <TerminalText color={color} style={{ fontSize: '0.8em'}}>\n          {formattedTime}\n        </TerminalText>\n      </div>\n      <span className={classes.none}></span>\n    </div>\n  )\n}\n\nexport default MessageBubble\n","\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\n\nexport const LOGOUT = \"LOGOUT\"\n\nexport const SELECT_CONVERSATION = \"SELECT_CONVERSATION\"\nexport const CLEAR_SELECT_CONVERSATION = \"CLEAR_SELECT_CONVERSATION\"\nexport const CONVERSATION_RECEIVED_MESSAGE = \"CONVERSATION_RECEIVED_MESSAGE\"\n\nexport const FETCH_CONVERSATION_REQUEST = \"FETCH_CONVERSATION_REQUEST\"\nexport const FETCH_CONVERSATION_SUCCESS = \"FETCH_CONVERSATION_SUCCESS\"\nexport const FETCH_CONVERSATION_FAILURE = \"FETCH_CONVERSATION_FAILURE\"\n\nexport const FETCH_CURRENT_MESSAGES_REQUEST = \"FETCH_CURRENT_MESSAGES_REQUEST\"\nexport const FETCH_CURRENT_MESSAGES_SUCCESS = \"FETCH_CURRENT_MESSAGES_SUCCESS\"\nexport const FETCH_CURRENT_MESSAGES_FAILURE = \"FETCH_CURRENT_MESSAGES_FAILURE\"\n\nexport const START_CONVERSATION_REQUEST = \"START_CONVERSATION_REQUEST\"\nexport const START_CONVERSATION_SUCCESS = \"START_CONVERSATION_SUCCESS\"\nexport const START_CONVERSATION_FAILURE = \"START_CONVERSATION_FAILURE\"\n\n\nexport const SOCKET_REQUEST = \"SOCKET_REQUEST\"\nexport const SOCKET_CONNECT = \"SOCKET_CONNECT\"\nexport const SOCKET_FAILURE = \"SOCKET_FAILURE\"\n\n","\nexport const BACKEND_URL = \"https://polar-ridge-40128.herokuapp.com\"\nexport const WEBSOCKET_URL = \"wss://polar-ridge-40128.herokuapp.com/socket\"\n","import React, { useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { withSnackbar } from 'notistack'\n\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nimport HttpsIcon from '@material-ui/icons/Https'\nimport Divider from '@material-ui/core/Divider'\nimport TextField from '@material-ui/core/TextField'\nimport IconButton from '@material-ui/core/IconButton'\nimport SendIcon from '@material-ui/icons/Send'\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nimport MessageBubble from '../components/MessageBubble'\nimport TerminalText from '../components/TerminalText'\n\nimport { fetchCurrentMessages, onReceivedMessage, clearSelectConversation } from '../store/actions/conversationActions'\nimport { joinChannel } from '../socket'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n    position: 'relative',\n  },\n  socketDown: {\n    width: '100%',\n    height: '100%',\n    background: '#00000055',\n    position: 'absolute'\n  },\n  head: {\n    paddingBottom: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    gridColumnGap: 15,\n    alignItems: 'center',\n    textAlign: 'right'\n  },\n  paper: {\n    padding: '10px 15px',\n    color: '#fff',\n    display: 'grid',\n    gridTemplateRows: '55px 10px 55vh 10px 40px'\n  },\n  messages: { \n    display: 'flex',\n    flexDirection: 'column-reverse',\n    overflowX: 'hidden',\n    overflowY: 'overlay',\n    paddingRight: 20,\n    paddingBottom: 5,\n  },\n  inputBar: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 40px',\n    alignItems: 'center',\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}))\n\nfunction Conversation ({\n  currentUser,\n  conversation,\n  fetchCurrentMessages,\n  onReceivedMessage,\n  socket,\n  socketConnected,\n  enqueueSnackbar,\n  clearSelectConversation,\n  loading\n}) {\n  let history = useHistory()\n  const classes = useStyles()\n  const [text, setText] = React.useState('')\n  const [channel, setChannel] = React.useState(null)\n  const inputRef = useRef(null);\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n  const focusInput = () => inputRef.focus()\n\n  React.useEffect(() => {\n    fetchCurrentMessages(\n      conversation.id,\n      () => {},\n      () => {\n      enqueueSnackbar('Erro ao carregar mensagens', { variant: 'warning' })\n      history.push(\"/\")\n    })\n    return () => {\n      clearSelectConversation()\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (!channel && socketConnected)\n      setChannel(joinChannel(socket, conversation.id, (message) => {\n        onReceivedMessage(message, currentUser)\n      }))\n    return () => {\n      if (channel) channel.leave()\n    }\n  }, [socketConnected])\n\n  const trySendMessage = (e) => {\n    e.preventDefault()\n    if (!channel) {\n      enqueueSnackbar('Não conectado ao canal', { variant: 'warning' })\n      return\n    }\n    if (!text || text === '') {\n      enqueueSnackbar('Digite a mensagem', { variant: 'warning' })\n      return\n    }\n    try {\n      channel.push('send_message', {content: text})\n    } finally {\n      setText('')\n      focusInput()\n    }\n  }\n\n  const renderMessages = () => {\n    if (loading) return null;\n\n    if (socketConnected && conversation && conversation.messages) {\n      return (\n        <div className={classes.messages}>\n          {conversation.messages && conversation.messages.map(message => {\n            return (\n              <MessageBubble \n                key={message.id}\n                yourName={currentUser.name}\n                targetName={conversation.title}\n                content={message.content}\n                direction={message.direction}\n                time={message.time}\n              />\n            )\n          })}\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {!socketConnected && <div className={classes.socketDown}></div>}\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <div className={classes.paper}>\n        <div className={classes.head}>\n          <Link to=\"/\">\n            <ArrowBackIcon />\n          </Link>\n          <TerminalText prefix=\"#/ @\">{conversation.title}</TerminalText>\n          <HttpsIcon />\n        </div>\n        <Divider />\n        <div className={classes.messages}>\n          {renderMessages()}\n        </div>\n        <Divider />\n        <form className={classes.inputBar} onSubmit={trySendMessage} noValidate autoComplete={'false'}>\n          <TextField\n            autoFocus={true}\n            inputRef={inputRef}\n            color=\"primary\"\n            value={text}\n            onChange={handleChange}\n          />\n          <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\" type=\"submit\">\n            <SendIcon fontSize=\"default\" style={{ color: '#fff' }} />\n          </IconButton>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.account.user,\n    conversation: state.conversation.currentConversation,\n    loading: state.conversation.loading,\n    socket: state.socketConnection.socket,\n    socketConnected: state.socketConnection.connected,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onReceivedMessage: (message, user) => dispatch(onReceivedMessage(message, user)),\n    clearSelectConversation: () => dispatch(clearSelectConversation()),\n    fetchCurrentMessages: (conversationId, onSuccess, onError) => dispatch(fetchCurrentMessages(conversationId, onSuccess, onError))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Conversation))\n","import axios from 'axios'\nimport {\n  SELECT_CONVERSATION,\n  FETCH_CONVERSATION_REQUEST,\n  FETCH_CONVERSATION_SUCCESS,\n  FETCH_CONVERSATION_FAILURE,\n  START_CONVERSATION_REQUEST,\n  START_CONVERSATION_SUCCESS,\n  START_CONVERSATION_FAILURE,\n  FETCH_CURRENT_MESSAGES_REQUEST,\n  FETCH_CURRENT_MESSAGES_SUCCESS,\n  FETCH_CURRENT_MESSAGES_FAILURE,\n  CONVERSATION_RECEIVED_MESSAGE,\n  CLEAR_SELECT_CONVERSATION\n} from '../actionTypes'\nimport { BACKEND_URL } from '../../consts'\n\nexport const selectConversation = (conversation) => { return {type: SELECT_CONVERSATION, payload: conversation} }\nexport const clearSelectConversation = () => { return {type: CLEAR_SELECT_CONVERSATION } }\n\nexport const onReceivedMessage = (payload, user) => {\n  const {message, conversation} = payload\n  return {\n    type: CONVERSATION_RECEIVED_MESSAGE,\n    payload: {\n      message: {\n        id: message.id,\n        content: message.content,\n        time: message.time,\n        direction: message.user_id === user.id ? 'out' : 'in'\n      },\n      conversation\n    }\n  }\n}\n\nexport const fetchConversations = () => async dispatch => {\n  dispatch({ type: FETCH_CONVERSATION_REQUEST})\n  try {\n    const token = localStorage.getItem('auth_token')\n\n    const response = await axios.get(BACKEND_URL + '/api/conversations', {\n      headers: { 'Authorization': `Bearer ${token}`}\n    });\n    const {success, conversations} = response.data;\n    if (!success) throw Error(\"could fetch conversations\")\n\n    dispatch({ type: FETCH_CONVERSATION_SUCCESS, payload: conversations })\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: FETCH_CONVERSATION_FAILURE })\n  }\n}\n\nexport const startConversation = (secretCode, onSuccess, onError) => async dispatch => {\n  dispatch({ type: START_CONVERSATION_REQUEST})\n  try {\n    const token = localStorage.getItem('auth_token')\n\n    const response = await axios.post(BACKEND_URL + '/api/message',\n    {\n      'content': 'Vamos bater um lero',\n      'secret_code': secretCode\n    },\n    { headers: { 'Authorization': `Bearer ${token}`} });\n    const {success, message} = response.data;\n    if (!success) throw response.data\n\n    dispatch({ type: START_CONVERSATION_SUCCESS, payload: message })\n    onSuccess(message.conversation_id)\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: START_CONVERSATION_FAILURE })\n    onError()\n  }\n}\n\nexport const fetchCurrentMessages = (conversationId, onSuccess, onError) => async dispatch => {\n  dispatch({ type: FETCH_CURRENT_MESSAGES_REQUEST})\n  try {\n    const token = localStorage.getItem('auth_token')\n\n    const response = await axios.get(BACKEND_URL + `/api/conversations/${conversationId}/messages`,\n    { headers: { 'Authorization': `Bearer ${token}`} });\n    const {success} = response.data;\n    if (!success) throw response.data\n\n    dispatch({ type: FETCH_CURRENT_MESSAGES_SUCCESS, payload: response.data })\n    onSuccess()\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: FETCH_CURRENT_MESSAGES_FAILURE })\n    onError()\n  }\n}\n","import { Socket } from 'phoenix';\nimport { WEBSOCKET_URL } from './consts'\n\nexport const createAndConnectSocket = () => {\n  const token = localStorage.getItem('auth_token')\n  const socket = new Socket(WEBSOCKET_URL, {params: {token: token}})\n  socket.connect();\n  return socket\n}\n\nexport const joinChannel = (socket, conversationId, onReceivedMessageCallback) => {\n  const channel = socket.channel(`conversation:${conversationId}`);\n  channel.join().receive('ok', (responsePayload) => {\n    console.log('joined conversation', responsePayload);\n  });\n\n  channel.on(\"new_message\", (response) => {\n    onReceivedMessageCallback(response.message)\n  })\n  return channel\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from \"react-router-dom\"\n\nimport TerminalText from './TerminalText'\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport { selectConversation } from '../store/actions/conversationActions'\n\nconst useStyles = makeStyles((theme) => ({\n  conversation: {\n    padding: '10px 15px',\n    marginBottom: 8,\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr',\n    gridColumnGap: 15,\n    alignItems: 'center',\n    backgroundColor: '#4f4f4f',\n    color: '#fff'\n  }\n}))\n\nfunction ConversationCard ({ id, conversation, selectConversation }) {\n  const classes = useStyles()\n\n  return (\n    <Link to={`/conversations/${id}`} onClick={() => selectConversation(conversation)}>\n      <TerminalText prefix={`<${id}> conversation#/ `}>{conversation.title}</TerminalText>\n    </Link>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectConversation: (conversation) => dispatch(selectConversation(conversation))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ConversationCard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nimport Conversation from './Conversation'\nimport ConversationCard from '../components/ConversationCard'\n\nimport { fetchConversations } from '../store/actions/conversationActions'\nimport { ContactSupportOutlined } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflow: 'hidden',\n    maxHeight: '100vh'\n  },\n  conversations: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}))\n\nfunction ConversationRouter ({ account, conversations, loading, fetchConversations }) {\n  let match = useRouteMatch();\n  const classes = useStyles()\n\n  React.useEffect(() => {\n    fetchConversations()\n  }, [])\n\n  const renderConversations = () => {\n    if (loading) {\n      return <span>loading...</span>\n    }\n\n    if (!conversations || conversations.length == 0) {\n      return <span>Nenhuma conversa...</span>\n    }\n\n    return conversations.map(convs => {\n      return (<ConversationCard key={convs.id} id={convs.id} conversation={convs} />)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <div style={{ height: 10 }} />\n      <Switch>\n        <Route path={`${match.path}conversations/:conversationId`}>\n          <Conversation />\n        </Route>\n        <Route path={match.path}>\n          <div className={classes.conversations}>\n            {renderConversations()}\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    account: state.account,\n    conversations: state.conversation.conversations,\n    loading: state.conversation.loading,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchConversations: () => dispatch(fetchConversations())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConversationRouter)\n","import {\n  SOCKET_REQUEST,\n  SOCKET_CONNECT,\n  SOCKET_FAILURE,\n} from '../actionTypes'\nimport { createAndConnectSocket } from '../../socket'\n\nexport const connectSocket = () => dispatch => {\n  dispatch({ type: SOCKET_REQUEST })\n  try {\n    const socket = createAndConnectSocket()\n    dispatch({ type: SOCKET_CONNECT, payload: socket })\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: SOCKET_FAILURE })\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withSnackbar } from 'notistack'\n\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { doLogin, doAutoLogin } from '../store/actions/accountActions'\nimport { connectSocket } from '../store/actions/socketActions'\nimport { useHistory } from 'react-router'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    flexGrow: 1,\n    paddingTop: 15,\n    padding: 8\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}))\n\nfunction LoginScreen (props) {\n  const classes = useStyles()\n  const history = useHistory()\n  const [secretCode, setCode] = React.useState('');\n  const [password, setPass] = React.useState('');\n  const handleChangeCode = (event) => setCode(event.target.value)\n  const handleChangePass = (event) => setPass(event.target.value)\n\n  React.useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    if (!!token && token !== '') {\n      props.doAutoLogin(token, () => {\n        props.connectSocket()\n        history.push(\"/\")\n      }, () => {})\n    }\n  }, [])\n\n  const tryLogin = (e) => {\n    e.preventDefault()\n    if (secretCode === '' || password === '') {\n      props.enqueueSnackbar('Preencha os campos', { variant: 'warning' })\n    } else {\n      props.doLogin(secretCode, password, () => {\n        props.connectSocket()\n      }, () => {\n        props.enqueueSnackbar('Login falhou. Verifique os dados.', { variant: 'error' })\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={tryLogin}>\n        <Backdrop className={classes.backdrop} open={props.account.loading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <TextField\n          label=\"Código secreto\"\n          value={secretCode}\n          onChange={handleChangeCode}\n          variant=\"outlined\"\n          color=\"secondary\"\n        />\n        <div style={{ height: 10 }} />\n        <TextField\n          type=\"password\"\n          value={password}\n          onChange={handleChangePass}\n          label=\"Senha\"\n          variant=\"outlined\"\n          color=\"secondary\"\n        />\n        <div style={{ height: 15 }} />\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Entrar\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    doLogin: (secretCode, password, onSuccess, onError) => dispatch(doLogin(secretCode, password, onSuccess, onError)),\n    doAutoLogin: (token, onSuccess, onError) => dispatch(doAutoLogin(token, onSuccess, onError)),\n    connectSocket: () => dispatch(connectSocket()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(LoginScreen))\n","import axios from 'axios'\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from '../actionTypes'\nimport { BACKEND_URL } from '../../consts'\n\nexport const doLogin = (secretCode, password, onSuccess, onError) => async dispatch => {\n  dispatch({ type: LOGIN_REQUEST})\n  try {\n    const loginResponse = await axios.post(BACKEND_URL + '/api/login', { 'secret_code': secretCode, 'password': password });\n    const {success, token} = loginResponse.data;\n    if (!success) throw loginResponse;\n\n    const userResponse = await axios.get(BACKEND_URL + '/api/user', {\n      headers: { 'Authorization': `Bearer ${token}`}\n    });\n    if (!userResponse.data.success) userResponse;\n\n    dispatch({ type: LOGIN_SUCCESS, payload: { token, user: userResponse.data.user } })\n    onSuccess()\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: LOGIN_FAILURE })\n    onError()\n  }\n}\n\nexport const doAutoLogin = (token, onSuccess, onError) => async dispatch => {\n  dispatch({ type: LOGIN_REQUEST})\n  try {\n    const userResponse = await axios.get(BACKEND_URL + '/api/user', {\n      headers: { 'Authorization': `Bearer ${token}`}\n    });\n    if (!userResponse.data.success) throw Error(\"could not fetch user data\")\n\n    dispatch({ type: LOGIN_SUCCESS, payload: { token, user: userResponse.data.user } })\n    onSuccess()\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: LOGIN_FAILURE })\n    onError()\n  }\n}\n\nexport const doLogout = () => { return {type: LOGOUT} }\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withSnackbar } from 'notistack'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { startConversation } from '../store/actions/conversationActions'\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    flexGrow: 1,\n    paddingTop: 15,\n    padding: 8\n  },\n}))\n\nfunction NewConversation ({ account, startConversation, enqueueSnackbar }) {\n  const classes = useStyles()\n  const history = useHistory()\n  const [secretCode, setText] = React.useState('');\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const tryStartConversation = (e) => {\n    e.preventDefault();\n    if (secretCode && secretCode !== '') {\n      startConversation(secretCode, (conversationId) => {\n        history.push(\"/conversations/\" + conversationId)\n      }, () => {\n        enqueueSnackbar('Código secreto não encontrado', { variant: 'info' })\n      })\n    } else {\n      enqueueSnackbar('Preencha o campo', { variant: 'warning' })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={tryStartConversation}>\n        <TextField\n          label=\"Código secreto\"\n          color=\"secondary\"\n          value={secretCode}\n          onChange={handleChange}\n          variant=\"outlined\"\n        />\n        <div style={{ height: 15 }} />\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Iniciar Conversa\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    startConversation: (secretCode, onSuccess, onError) => dispatch(startConversation(secretCode, onSuccess, onError))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(NewConversation))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline'\n  },\n  button: {},\n  userName: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    textAlign: 'right'\n  }\n}))\n\nfunction UserStatus ({ account }) {\n  const classes = useStyles()\n\n  if (account.logged) {\n    return (\n      <div className={classes.root}>\n        <div className={classes.userName}>\n          <span style={{ fontSize: '1.2em', fontWeight: 500 }}>{account.user.name}</span>\n          <span>{account.user.secretCode}</span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Button color=\"inherit\" className={classes.button}>\n      Login\n    </Button>\n  )\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    account: state.account\n  }\n}\n\nexport default connect(mapStateToProps)(UserStatus)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport TerminalText from './TerminalText'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n}))\n\nconst GREEN = \"#FFCF99\"\nconst ORANGE = \"#666\"\n\nfunction SocketStatus ({ status }) {\n  const classes = useStyles()\n  const { connected, loading } = status\n  const color = loading ? ORANGE : (connected ? GREEN : ORANGE)\n  const text = loading ? 'connecting...' : (connected ? 'connected' : 'disconnected')\n\n  return (\n    <div className={classes.root}>\n      <TerminalText color='#FFF' style={{ fontSize: '0.65em', fontWeight: 100, paddingRight: 5 }}> \n        status: \n      </TerminalText>\n      <TerminalText color={color} style={{ fontSize: '0.65em', fontWeight: 600 }}> \n        {text}\n      </TerminalText>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.socketConnection\n  }\n}\n\nexport default connect(mapStateToProps)(SocketStatus)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport StarIcon from '@material-ui/icons/Star'\nimport ArchiveIcon from '@material-ui/icons/Archive'\nimport ForumIcon from '@material-ui/icons/Forum'\nimport CreateIcon from '@material-ui/icons/Create'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n\nimport ConversationRouter from './screens/ConversationRouter'\nimport LoginScreen from './screens/LoginScreen'\nimport NewConversation from './screens/NewConversation'\nimport UserStatus from './components/UserStatus'\nimport SocketStatus from './components/SocketStatus'\n\nimport { doLogout } from './store/actions/accountActions'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    flexGrow: 1,\n  },\n  main: {\n    padding: 15,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  appToolbar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignContent: 'center',\n    padding: '3px 15px'\n  },\n  toolbarTitle: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#333',\n    color: '#fff'\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  menuButton: {\n  },\n  hide: {\n    display: 'none',\n  },\n}))\n\n\nfunction App ({ account, ...props  }) {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    if (account.logged)\n      setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const menuLink = (path, text, icon) => (\n    <Link to={path} onClick={handleDrawerClose}>\n      <ListItem button key={text}>\n        <ListItemIcon>\n          {icon}\n        </ListItemIcon>\n        <ListItemText primary={text} />\n      </ListItem>\n    </Link>\n  );\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar className={classes.appToolbar}>\n            {account.logged && (\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n            )}\n            <Typography variant=\"h6\">\n              <Link to=\"/\">\n                <div className={classes.toolbarTitle}>\n                  <span>Lero</span>\n                  <SocketStatus />\n                </div>\n              </Link>\n            </Typography>\n            <div style={{ flex: '1' }} />\n            <UserStatus />\n          </Toolbar>\n        </AppBar>\n\n        <SwipeableDrawer\n          className={classes.drawer}\n          anchor=\"left\"\n          open={open}\n          onOpen={handleDrawerOpen}\n          onClose={handleDrawerClose}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon style={{ color: 'white' }} />\n            </IconButton>\n          </div>\n          <div className={classes.drawerContainer}>\n            <Divider />\n            <List>\n              {menuLink(\"/\", \"/conversations\", <ForumIcon style={{ color: '#fff' }} />)}\n            </List>\n            {account.logged && (\n              <React.Fragment>\n                <Divider />\n                <List>\n                  {menuLink(\"/new\", \"/start_new\", <CreateIcon style={{ color: '#fff' }} />)}\n                </List>\n                <List>\n                  <ListItem onClick={() => {\n                    props.doLogout()\n                    handleDrawerClose()\n                  }} button key='logout'>\n                    <ListItemIcon>\n                      <ExitToAppIcon style={{ color: '#fff' }}/>\n                    </ListItemIcon>\n                    <ListItemText primary='/logout' />\n                  </ListItem>\n                </List>\n              </React.Fragment>)\n            }\n          </div>\n        </SwipeableDrawer>\n        {<main>\n          <Container component=\"main\" className={classes.main} maxWidth=\"md\">\n            {account.logged \n            ? (<Switch>\n                <Route path=\"/favorite\">\n                  <p>Favorite</p>\n                </Route>\n                <Route path=\"/archived\">\n                  <p>Archived</p>\n                </Route>\n                <Route path=\"/new\">\n                  <NewConversation />\n                </Route>\n                <Route path=\"/\">\n                  <ConversationRouter />\n                </Route>\n              </Switch>)\n            : (\n              <LoginScreen />\n            )}\n          </Container>\n        </main>}\n\n      </div>\n    </Router>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: state.account\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    doLogout: () => dispatch(doLogout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#7d130c',\n    },\n    secondary: {\n      main: '#FFCF99',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#1E1E24',\n    },\n    text: {\n      primary: '#FFF8F0',\n      secondary: '#e6e6e6'\n    },\n  },\n  typography: {\n    fontFamily: \"SourceCodePro, RetroGaming, VCRMono, monospace\"\n  },\n});\n\nexport default theme;\n","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from '../actionTypes'\n\nconst INITIAL_STATE = {\n  logged: false,\n  user: null,\n  token: \"\",\n  loading: false\n}\n\nfunction accountReducer(state = INITIAL_STATE, action) {\n  console.log(action)\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {...state, loading: true}\n    case LOGIN_SUCCESS:\n      const { token, user } = action.payload\n      localStorage.setItem('auth_token', token);\n      return {...state, loading: false, token, user, logged: true}\n    case LOGIN_FAILURE:\n      localStorage.removeItem('auth_token')\n      return INITIAL_STATE\n    case LOGOUT:\n      localStorage.removeItem('auth_token')\n      return INITIAL_STATE\n    default:\n      return state\n  }\n}\n\nexport default accountReducer\n","import _ from 'lodash'\nimport {\n  LOGOUT,\n  SELECT_CONVERSATION,\n  CLEAR_SELECT_CONVERSATION,\n  FETCH_CONVERSATION_REQUEST,\n  FETCH_CONVERSATION_SUCCESS,\n  FETCH_CONVERSATION_FAILURE,\n  START_CONVERSATION_REQUEST,\n  START_CONVERSATION_SUCCESS,\n  START_CONVERSATION_FAILURE,\n  FETCH_CURRENT_MESSAGES_REQUEST,\n  FETCH_CURRENT_MESSAGES_SUCCESS,\n  FETCH_CURRENT_MESSAGES_FAILURE,\n  CONVERSATION_RECEIVED_MESSAGE\n} from '../actionTypes'\n\nconst INITIAL_STATE = {\n  conversations: [\n    {\n      id: 1,\n      title: 'Hello world',\n      messages: [\n        {\n          id: 1,\n          content: 'Hello',\n          direction: 'out'\n        },\n        {\n          id: 2,\n          content: 'Hi there',\n          direction: 'in'\n        },\n      ] \n    }\n  ],\n  currentConversation: {},\n  loading: false\n}\n\nfunction conversationReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case FETCH_CONVERSATION_REQUEST:\n      return {...state, loading: true}\n    case FETCH_CONVERSATION_SUCCESS:\n      return {...state, conversations: action.payload, loading: false}\n    case FETCH_CONVERSATION_FAILURE:\n      return {...state, conversations: [], loading: false}\n\n    case FETCH_CURRENT_MESSAGES_REQUEST:\n      return {...state, loading: true}\n    case FETCH_CURRENT_MESSAGES_SUCCESS:\n      const { conversation, messages } = action.payload\n      return {...state, loading: false, currentConversation: {...conversation, messages: sortMessages(messages) }}\n    case FETCH_CURRENT_MESSAGES_FAILURE:\n      return {...state, loading: false, currentConversation: {...state.currentConversation, messages: []}}\n    \n    case CONVERSATION_RECEIVED_MESSAGE:\n      if (state.currentConversation.id) {\n        const messages = [...state.currentConversation.messages, action.payload]\n        return {...state, currentConversation: {...state.currentConversation, messages: sortMessages(messages) }}\n      } else {\n        return state\n      }\n\n    case SELECT_CONVERSATION:\n      return {...state, currentConversation: action.payload}\n    case CLEAR_SELECT_CONVERSATION:\n      return {...state, currentConversation: {}}\n    case LOGOUT:\n      return INITIAL_STATE\n    default:\n      return state\n  }\n}\n\nfunction sortMessages (messages) {\n  return _.orderBy(messages, 'time', 'desc')\n}\n\nexport default conversationReducer\n","import {\n  SOCKET_REQUEST,\n  SOCKET_CONNECT,\n  SOCKET_FAILURE,\n  LOGOUT,\n} from '../actionTypes'\n\nconst INITIAL_STATE = {\n  connected: false,\n  loading: false,\n  socket: null\n}\n\nfunction socketReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case SOCKET_REQUEST:\n      return {...state, loading: true, connected: false}\n    case SOCKET_CONNECT:\n      return {connected: true, loading: false, socket: action.payload}\n    case SOCKET_FAILURE:\n      return INITIAL_STATE\n    case LOGOUT:\n      return INITIAL_STATE\n    default:\n      return state\n  }\n}\n\nexport default socketReducer\n","import { combineReducers } from 'redux'\nimport accountReducer from './accountReducer'\nimport conversationReducer from './conversationReducer'\nimport socketReducer from './socketReducer'\n\nexport default combineReducers({\n  account: accountReducer,\n  conversation: conversationReducer,\n  socketConnection: socketReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport App from './App';\nimport theme from './theme';\n\nimport { Provider } from 'react-redux'\n\nimport configureStore from './store'\n\nconst store = configureStore();\n\nexport const registerServiceWorker = () => {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', function () {\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\n        // Registration was successful\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\n      }).catch(function (err) {\n        // registration failed :(\n        //console.log('ServiceWorker registration failed: ', err);\n      });\n    });\n  }\n}\n\nregisterServiceWorker()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </Provider>\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = compose(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"],"sourceRoot":""}