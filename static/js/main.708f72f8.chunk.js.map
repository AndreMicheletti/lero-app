{"version":3,"sources":["crypto.js","components/TerminalText.js","components/MessageBubble.js","socket.js","store/actionTypes.js","consts.js","store/actions/conversationActions.js","screens/Conversation.js","components/ConversationCard.js","screens/ConversationRouter.js","store/actions/socketActions.js","screens/LoginScreen.js","store/actions/accountActions.js","screens/NewConversation.js","components/UserStatus.js","components/SocketStatus.js","App.js","theme.js","store/reducers/accountReducer.js","store/reducers/conversationReducer.js","store/reducers/socketReducer.js","store/reducers/index.js","index.js","store/index.js"],"names":["JsonFormatter","stringify","cipherParams","jsonObj","ct","ciphertext","toString","CryptoJS","enc","Base64","iv","salt","s","JSON","parse","jsonStr","lib","CipherParams","create","Hex","parseBase64","content","atob","split","e","useStyles","makeStyles","theme","terminal","fontFamily","fontWeight","fontSize","TerminalText","prefix","color","children","style","classes","className","line","marginBottom","marginTop","display","alignItems","overflowWrap","gridGap","bubble","gridArea","name","flexDirection","justifyContent","none","MessageBubble","userChannel","conversationChannel","tkn","encryptedObject","yourName","targetName","time","direction","outbound","formattedTime","substr","messageText","localStorage","getItem","AES","decrypt","iss","format","Utf8","gridTemplateAreas","gridTemplateColumns","textAlign","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","SELECT_CONVERSATION","CLEAR_SELECT_CONVERSATION","CONVERSATION_RECEIVED_MESSAGE","ON_NEW_CONVERSATION","ON_UPD_CONVERSATION","FETCH_CONVERSATION_REQUEST","FETCH_CONVERSATION_SUCCESS","FETCH_CONVERSATION_FAILURE","FETCH_CURRENT_MESSAGES_REQUEST","FETCH_CURRENT_MESSAGES_SUCCESS","FETCH_CURRENT_MESSAGES_FAILURE","SOCKET_REQUEST","SOCKET_CONNECT","SOCKET_FAILURE","BACKEND_URL","selectConversation","conversation","type","payload","sendMessage","text","console","warn","message","contentPayload","encrypt","push","leaveConversation","leave","receive","log","leaveUser","root","flexGrow","position","socketDown","width","height","background","head","paddingBottom","paddingLeft","paddingRight","gridColumnGap","paper","padding","gridTemplateRows","messages","overflowX","overflowY","inputBar","paddingTop","backdrop","zIndex","drawer","connect","state","currentUser","account","user","currentConversation","loading","socket","socketConnection","socketConnected","connected","dispatch","onReceivedMessage","id","user_id","clearSelectConversation","fetchCurrentMessages","conversationId","onSuccess","onError","a","token","axios","get","headers","response","data","success","withSnackbar","enqueueSnackbar","history","useHistory","React","useState","setText","channel","setChannel","messageInput","useRef","useEffect","variant","onReceivedMessageCallback","join","responsePayload","on","joinConversation","Backdrop","open","CircularProgress","to","title","Divider","map","onSubmit","preventDefault","current","focus","noValidate","autoComplete","TextField","autoFocus","inputRef","value","onChange","event","target","IconButton","aria-label","margin","size","backgroundColor","onClick","updated","overflow","maxHeight","conversations","fetchConversations","Error","match","useRouteMatch","path","length","convs","connectSocket","userId","onNewConversation","onUpdateConversation","Socket","params","createAndConnectSocket","joinUser","minHeight","doLogin","secretCode","password","post","loginResponse","userResponse","doAutoLogin","addConversation","updateConversation","props","setCode","setPass","label","Button","startConversation","conversation_id","button","userName","logged","ORANGE","status","main","appBar","appToolbar","alignContent","toolbarTitle","flexShrink","drawerPaper","drawerContainer","drawerHeader","spacing","mixins","toolbar","menuButton","hide","doLogout","setOpen","handleDrawerOpen","handleDrawerClose","menuLink","icon","ListItem","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","Toolbar","edge","Typography","flex","SwipeableDrawer","anchor","onOpen","onClose","List","Fragment","Container","component","maxWidth","createMuiTheme","palette","secondary","error","red","A400","default","typography","INITIAL_STATE","accountReducer","action","setItem","removeItem","sortMessages","_","orderBy","clearUpdatedOnConversation","convsId","conversationReducer","socketReducer","disconnect","combineReducers","store","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","compose","createStore","rootReducer","configureStore","registerServiceWorker","navigator","window","addEventListener","serviceWorker","register","then","registration","catch","err","ReactDOM","render","ThemeProvider","maxSnack","document","querySelector"],"mappings":"0zBAEMA,EAAgB,CACpBC,UAAW,SAACC,GACV,IAAMC,EAAU,CAAEC,GAAIF,EAAaG,WAAWC,SAASC,IAASC,IAAIC,SAGpE,OAFIP,EAAaQ,KAAIP,EAAQO,GAAKR,EAAaQ,GAAGJ,YAC9CJ,EAAaS,OAAMR,EAAQS,EAAIV,EAAaS,KAAKL,YAC9CO,KAAKZ,UAAUE,IAExBW,MAAO,SAACC,GACN,IAAMZ,EAAUU,KAAKC,MAAMC,GAErBb,EAAeK,IAASS,IAAIC,aAAaC,OAAO,CACpDb,WAAYE,IAASC,IAAIC,OAAOK,MAAMX,EAAQC,MAIhD,OAFID,EAAQO,KAAIR,EAAaQ,GAAKH,IAASC,IAAIW,IAAIL,MAAMX,EAAQO,KAC7DP,EAAQS,IAAGV,EAAaS,KAAOJ,IAASC,IAAIW,IAAIL,MAAMX,EAAQS,IAC3DV,IAIEkB,EAAc,SAACC,GAC1B,IACE,OAAOR,KAAKC,MAAMQ,KAAKD,EAAQE,MAAM,KAAK,KAC1C,MAAOC,GACP,OAAO,O,OCtBLC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,WAAY,UACZC,WAAY,IACZC,SAAU,QAIC,SAASC,EAAT,GAAiE,IAAxCC,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAwB,IAAdC,aAAc,MAAN,GAAM,EACvEC,EAAUZ,IAChB,OACE,uBAAMa,UAAWD,EAAQT,SAAUQ,MAAK,2BAAOA,GAAP,IAAcF,MAAOA,GAAS,SAAtE,UACGD,EAAQE,KCTf,IAAMV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCY,KAAM,CACJC,aAAc,EACdC,UAAW,EACXC,QAAS,OACTC,WAAY,aACZC,aAAc,WACdC,QAAS,IAEXC,OAAQ,CACNC,SAAU,SACVb,MAAO,QAETc,KAAM,CACJN,QAAS,OACTO,cAAe,SACfC,eAAgB,aAChBP,WAAY,aACZI,SAAU,OACVH,aAAc,YAEhBO,KAAM,CACJJ,SAAU,YAwCCK,IChEXC,GACAC,GD+DWF,GApCf,YAA6E,IFC9CG,EAAKC,EEDVC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,WAAYrC,EAA4B,EAA5BA,QAASsC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACvDvB,EAAUZ,KACVoC,EAAyB,QAAdD,EAYX1B,EAAQ2B,EAAW,UAAY,UAC/BC,EAAgBH,EAAKrD,WAAWyD,OAAO,IACvCC,GFfuBT,EEeMnC,EAAY6C,aAAaC,QAAQ,eFflCV,EEekD3C,KAAKZ,UAAUoB,GFf7Cd,IAAS4D,IAAIC,QAAQZ,EAAiBD,EAAIc,IAAK,CACrGC,OAAQtE,IACPM,SAASC,IAASC,IAAI+D,OEevB,OACE,sBAAKjC,UAAWD,EAAQE,KAAMH,MAAOyB,EAVjB,CACpBW,kBAAmB,qBACnBC,oBAAqB,sCACrBC,UAAW,SARO,CAClBF,kBAAmB,qBACnBC,oBAAqB,sCACrBC,UAAW,QAYX,UACE,qBAAKpC,UAAWD,EAAQS,OAAxB,SACE,cAACd,EAAD,CAAcI,MAAO,CAAEN,WAAY,KAAnC,SAA2CkC,MAE7C,sBAAK1B,UAAWD,EAAQW,KAAxB,UACE,cAAChB,EAAD,CAAcE,MAAOA,EAAOE,MAAO,CAAEN,WAAY,KAAjD,SACG+B,EAAW,IAAMJ,EAAW,IAAMC,IAErC,cAAC1B,EAAD,CAAcE,MAAOA,EAAOE,MAAO,CAAEL,SAAU,SAA/C,SACG+B,OAGL,sBAAMxB,UAAWD,EAAQc,W,iDE9DlBwB,GAAgB,gBAChBC,GAAgB,gBAChBC,GAAgB,gBAEhBC,GAAS,SAETC,GAAsB,sBACtBC,GAA4B,4BAC5BC,GAAgC,gCAEhCC,GAAsB,sBACtBC,GAAsB,sBAEtBC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA6B,6BAE7BC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAAiC,iCAOjCC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAiB,iBC1BjBC,GAAqB,0CCgBrBC,GAAqB,SAACC,GAAmB,MAAO,CAACC,KAAMjB,GAAqBkB,QAASF,I,UHQrFG,GAAc,SAACC,GACrB7C,IAAqB8C,QAAQC,KAAK,6EACvC,IHA6B9C,EAAK+C,EGA5BC,GHAuBhD,EGASnC,EAAY6C,aAAaC,QAAQ,eHArCoC,EGAqDH,EHAzCtF,KAAKC,MAAMP,IAAS4D,IAAIqC,QAAQF,EAAS/C,EAAIc,IAAK,CAChGC,OAAQtE,IACPM,aGDDgD,GAAoBmD,KAAK,eAAgBF,IAG9BG,GAAoB,WAC1BpD,KACLA,GAAoBqD,MAAM,KAAKC,QAAQ,MAAM,kBAAMR,QAAQS,IAAI,gCAC/DvD,GAAsB,OAmBXwD,GAAY,WAClBzD,KACLA,GAAYsD,MAAM,KAAKC,QAAQ,MAAM,kBAAMR,QAAQS,IAAI,gCACvDxD,GAAc,OIlCV5B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoF,KAAM,CACJC,SAAU,EACVC,SAAU,YAEZC,WAAY,CACVC,MAAO,OACPC,OAAQ,OACRC,WAAY,YACZJ,SAAU,YAEZK,KAAM,CACJC,cAAe,EACfC,YAAa,EACbC,aAAc,EACd/E,QAAS,OACT+B,oBAAqB,gBACrBiD,cAAe,GACf/E,WAAY,SACZ+B,UAAW,SAEbiD,MAAO,CACLC,QAAS,YACT1F,MAAO,OACPQ,QAAS,OACTmF,iBAAkB,4BAEpBC,SAAU,CACRpF,QAAS,OACTO,cAAe,iBACf8E,UAAW,SACXC,UAAW,UACXP,aAAc,GACdF,cAAe,GAEjBU,SAAU,CACRvF,QAAS,OACT+B,oBAAqB,WACrB9B,WAAY,SACZuF,WAAY,EACZX,cAAe,GAEjBY,SAAU,CACRC,OAAQzG,EAAMyG,OAAOC,OAAS,EAC9BnG,MAAO,YAmIX,IAkBeoG,gBAlBS,SAAAC,GACtB,MAAO,CACLC,YAAaD,EAAME,QAAQC,KAC3B3C,aAAcwC,EAAMxC,aAAa4C,oBACjCC,QAASL,EAAMxC,aAAa6C,QAC5BC,OAAQN,EAAMO,iBAAiBD,OAC/BE,gBAAiBR,EAAMO,iBAAiBE,cAIjB,SAAAC,GACzB,MAAO,CACLC,kBAAmB,SAAC5C,EAASoC,GAAV,OAAmBO,EDxLT,SAAChD,EAASyC,GACzC,MAAO,CACL1C,KAAMf,GACNgB,QAAS,CACPkD,GAAIlD,EAAQkD,GACZ9H,QAAS4E,EAAQ5E,QACjBsC,KAAMsC,EAAQtC,KACdC,UAAWqC,EAAQmD,UAAYV,EAAKS,GAAK,MAAQ,OCiLJD,CAAkB5C,EAASoC,KAC1EW,wBAAyB,kBAAMJ,ED/LmB,CAACjD,KAAMhB,MCgMzDsE,qBAAsB,SAACC,EAAgBC,EAAWC,GAA5B,OAAwCR,EDrI9B,SAACM,EAAgBC,EAAWC,GAA5B,gDAAwC,WAAMR,GAAN,kBAAAS,EAAA,6DAC1ET,EAAS,CAAEjD,KAAMT,KADyD,SAGlEoE,EAAQ1F,aAAaC,QAAQ,cAHqC,SAKjD0F,KAAMC,IAAIhE,GAAW,6BAAyB0D,EAAzB,aAC5C,CAAEO,QAAS,CAAE,cAAgB,UAAhB,OAA2BH,MANgC,WAKlEI,EALkE,QAO7CC,KAApBC,QAPiE,sBAQpDF,EAASC,KAR2C,OAUxEf,EAAS,CAAEjD,KAAMR,GAAgCS,QAAS8D,EAASC,OACnER,IAXwE,kDAaxEpD,QAAQC,KAAR,MACA4C,EAAS,CAAEjD,KAAMP,KACjBgE,IAfwE,0DAAxC,sDCqIuCH,CAAqBC,EAAgBC,EAAWC,QAI5GnB,CAA6C4B,aAjJ5D,YAUI,IATF1B,EASC,EATDA,YACAzC,EAQC,EARDA,aACAuD,EAOC,EAPDA,qBACAJ,EAMC,EANDA,kBACAL,EAKC,EALDA,OACAE,EAIC,EAJDA,gBACAoB,EAGC,EAHDA,gBACAd,EAEC,EAFDA,wBACAT,EACC,EADDA,QAEIwB,EAAUC,cACRhI,EAAUZ,KAFf,EAGuB6I,IAAMC,SAAS,IAHtC,mBAGMpE,EAHN,KAGYqE,EAHZ,OAI6BF,IAAMC,UAAS,GAJ5C,mBAIME,EAJN,KAIeC,EAJf,KAKKC,EAAeC,iBAAO,MA4E5B,OAtEAN,IAAMO,WAAU,WAQd,OAPAvB,EACEvD,EAAaoD,IACb,eACA,WACAgB,EAAgB,6BAA8B,CAAEW,QAAS,YACzDV,EAAQ3D,KAAK,QAER,WACLC,KACA2C,OAED,IAEHiB,IAAMO,WAAU,WACd,IAAKJ,GAAW1B,EACd,IACE3C,QAAQS,IAAI,oCJhGY,SAACgC,EAAQU,EAAgBwB,GACnDzH,IAAqBoD,MAEzBpD,GAAsBuF,EAAO4B,QAAP,uBAA+BlB,KACjCyB,OAAOpE,QAAQ,MAAM,SAACqE,GACxC7E,QAAQS,IAAI,sBAAuBoE,MAGrC3H,GAAoB4H,GAAG,eAAe,SAACnB,GACrCgB,EAA0BhB,EAASzD,YIwF/B6E,CAAiBtC,EAAQ9C,EAAaoD,IAAI,SAAC7C,GACzC4C,EAAkB5C,EAASkC,MAE7BkC,GAAW,GACX,MAAOlJ,GACP4E,QAAQC,KAAK7E,GACbkJ,GAAW,MAGd,CAAC3B,IA4CF,sBAAKzG,UAAWD,EAAQ0E,KAAxB,WACIgC,GAAmB,qBAAKzG,UAAWD,EAAQ6E,aAC7C,cAACkE,EAAA,EAAD,CAAU9I,UAAWD,EAAQ8F,SAAUkD,KAAMzC,EAA7C,SACE,cAAC0C,EAAA,EAAD,CAAkBpJ,MAAM,cAE1B,sBAAKI,UAAWD,EAAQsF,MAAxB,UACE,sBAAKrF,UAAWD,EAAQiF,KAAxB,UACE,cAAC,IAAD,CAAMiE,GAAG,IAAT,SACE,cAAC,IAAD,MAEF,cAACvJ,EAAD,CAAcC,OAAO,OAArB,SAA6B8D,EAAayF,QAC1C,cAAC,IAAD,OAEF,cAACC,EAAA,EAAD,IACA,qBAAKnJ,UAAWD,EAAQyF,SAAxB,SArCAc,EAAgB,KAEhBG,GAAmBhD,GAAgBA,EAAa+B,SAEhD,qBAAKxF,UAAWD,EAAQyF,SAAxB,SACG/B,EAAa+B,UAAY/B,EAAa+B,SAAS4D,KAAI,SAAApF,GAClD,OACE,cAAC,GAAD,CAEE7C,SAAU+E,EAAYxF,KACtBU,WAAYqC,EAAayF,MACzBnK,QAASiF,EAAQjF,QACjBuC,UAAW0C,EAAQ1C,UACnBD,KAAM2C,EAAQ3C,MALT2C,EAAQ6C,cANzB,IAsCI,cAACsC,EAAA,EAAD,IACA,uBAAMnJ,UAAWD,EAAQ4F,SAAU0D,SA5DlB,SAACnK,GAEtB,GADAA,EAAEoK,iBACGnB,EAIL,GAAKtE,GAAiB,KAATA,EAIb,IACED,GAAYC,GADd,QAGEqE,EAAQ,IA5CaG,EAAakB,QAAQC,aAsC1C3B,EAAgB,oBAAqB,CAAEW,QAAS,iBAJhDX,EAAgB,4BAA0B,CAAEW,QAAS,aAyDUiB,YAAU,EAACC,aAAc,QAAtF,UACE,cAACC,EAAA,EAAD,CACEC,WAAW,EACXC,SAAUxB,EACVzI,MAAM,UACNkK,MAAOjG,EACPkG,SApGW,SAACC,GACpB9B,EAAQ8B,EAAMC,OAAOH,UAqGf,cAACI,EAAA,EAAD,CAAYC,aAAW,SAASnK,UAAWD,EAAQqK,OAAQC,KAAK,QAAQ3G,KAAK,SAA7E,SACE,cAAC,IAAD,CAAUjE,SAAS,UAAUK,MAAO,CAAEF,MAAO,yBCrLnDT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoE,aAAc,CACZ6B,QAAS,YACTpF,aAAc,EACdE,QAAS,OACT+B,oBAAqB,WACrBiD,cAAe,GACf/E,WAAY,SACZiK,gBAAiB,UACjB1K,MAAO,YAeX,IAMeoG,eAAQ,MANI,SAAAW,GACzB,MAAO,CACLnD,mBAAoB,SAACC,GAAD,OAAkBkD,EAASnD,GAAmBC,QAIvDuC,EAjBf,YAAsE,IAAzCa,EAAwC,EAAxCA,GAAIpD,EAAoC,EAApCA,aAAcD,EAAsB,EAAtBA,mBAG7C,OAFgBrE,KAGd,eAAC,IAAD,CAAM8J,GAAE,yBAAoBpC,GAAM0D,QAAS,kBAAM/G,EAAmBC,IAApE,UACE,cAAC/D,EAAD,CAAcC,OAAM,WAAMkH,EAAN,qBAApB,SAAkDpD,EAAayF,QAC9DzF,EAAa+G,SAAY,cAAC9K,EAAD,CAAcC,OAAO,IAAIC,MAAM,MAA/B,SAAsC,eCbhET,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoF,KAAM,CACJgG,SAAU,SACVC,UAAW,SAEbC,cAAe,CACbvK,QAAS,OACTO,cAAe,cA2CnB,IAceqF,gBAdS,SAAAC,GACtB,MAAO,CACLE,QAASF,EAAME,QACfwE,cAAe1E,EAAMxC,aAAakH,cAClCrE,QAASL,EAAMxC,aAAa6C,YAIL,SAAAK,GACzB,MAAO,CACLiE,mBAAoB,kBAAMjE,EHrCI,yCAAM,WAAMA,GAAN,wBAAAS,EAAA,6DACtCT,EAAS,CAAEjD,KAAMZ,KADqB,SAG9BuE,EAAQ1F,aAAaC,QAAQ,cAHC,SAKb0F,KAAMC,IAAIhE,GAAc,qBAAsB,CACnEiE,QAAS,CAAE,cAAgB,UAAhB,OAA2BH,MANJ,UAK9BI,EAL8B,SAQHA,EAASC,KAAnCC,EAR6B,EAQ7BA,QAASgD,EARoB,EAQpBA,cACXhD,EAT+B,sBAShBkD,MAAM,6BATU,OAWpClE,EAAS,CAAEjD,KAAMX,GAA4BY,QAASgH,IAXlB,kDAapC7G,QAAQC,KAAR,MACA4C,EAAS,CAAEjD,KAAMV,KAdmB,0DAAN,2DGyCnBgD,EArDf,YAAsF,EAAvDG,QAAwD,IAA/CwE,EAA8C,EAA9CA,cAAerE,EAA+B,EAA/BA,QAASsE,EAAsB,EAAtBA,mBAC1DE,EAAQC,cACNhL,EAAUZ,KAoBhB,OAlBA6I,IAAMO,WAAU,WACdqC,MACC,IAiBD,sBAAK5K,UAAWD,EAAQ0E,KAAxB,UACE,qBAAK3E,MAAO,CAAEgF,OAAQ,MACtB,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkG,KAAI,UAAKF,EAAME,KAAX,iCAAX,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAMF,EAAME,KAAnB,SACE,qBAAKhL,UAAWD,EAAQ4K,cAAxB,SArBFrE,EACK,8CAGJqE,GAAyC,GAAxBA,EAAcM,OAI7BN,EAAcvB,KAAI,SAAA8B,GACvB,OAAQ,cAAC,GAAD,CAAiCrE,GAAIqE,EAAMrE,GAAIpD,aAAcyH,GAAtCA,EAAMrE,OAJ9B,oE,UClCAsE,GAAgB,SAACC,EAAQC,EAAmBC,GAA5B,OAAqD,SAAA3E,GAChFA,EAAS,CAAEjD,KAAMN,KACjB,IACE,IAAMmD,EPH4B,WACpC,IAAMc,EAAQ1F,aAAaC,QAAQ,cAC7B2E,EAAS,IAAIgF,UELe,+CFKO,CAACC,OAAQ,CAACnE,MAAOA,KAE1D,OADAd,EAAOP,UACAO,EODUkF,IP6BK,SAAClF,EAAQ6E,EAAQC,EAAmBC,GACtDvK,IAAayD,MAEjBzD,GAAcwF,EAAO4B,QAAP,uBACFO,OAAOpE,QAAQ,MAAM,SAACqE,GAChC7E,QAAQS,IAAI,sBAAuBoE,MAGrC5H,GAAY6H,GAAG,oBAAoB,SAACnB,GAClC4D,EAAkB5D,EAAShE,iBAE7B1C,GAAY6H,GAAG,oBAAoB,SAACnB,GAClC6D,EAAqB7D,EAAShE,iBOxC9BiI,CAASnF,EAAQ6E,EAAQC,EAAmBC,GAC5C3E,EAAS,CAAEjD,KAAML,GAAgBM,QAAS4C,IAC1C,MAAOrH,GACP4E,QAAQC,KAAK7E,GACbyH,EAAS,CAAEjD,KAAMJ,QCCfnE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoF,KAAM,CACJrE,QAAS,OACTO,cAAe,SACfgL,UAAW,QACXjH,SAAU,EACVkB,WAAY,GACZN,QAAS,GAEXO,SAAU,CACRC,OAAQzG,EAAMyG,OAAOC,OAAS,EAC9BnG,MAAO,YAoEX,IAgBeoG,gBAhBS,SAACC,GACvB,MAAO,CACLE,QAASF,EAAME,YAIQ,SAAAQ,GACzB,MAAO,CACLiF,QAAS,SAACC,EAAYC,EAAU5E,EAAWC,GAAlC,OAA8CR,ECnGpC,SAACkF,EAAYC,EAAU5E,EAAWC,GAAlC,gDAA8C,WAAMR,GAAN,wBAAAS,EAAA,6DACnET,EAAS,CAAEjD,KAAMrB,KADkD,kBAGrCiF,KAAMyE,KAAKxI,GAAc,aAAc,CAAE,YAAesI,EAAY,SAAYC,IAH3C,UAG3DE,EAH2D,SAIxCA,EAActE,KAAhCC,EAJ0D,EAI1DA,QAASN,EAJiD,EAIjDA,MACXM,EAL4D,sBAK7CqE,EAL6C,wBAOtC1E,KAAMC,IAAIhE,GAAc,YAAa,CAC9DiE,QAAS,CAAE,cAAgB,UAAhB,OAA2BH,MARyB,SAO3D4E,EAP2D,QAU/CvE,KAAKC,QAEvBhB,EAAS,CAAEjD,KAAMpB,GAAeqB,QAAS,CAAE0D,QAAOjB,KAAM6F,EAAavE,KAAKtB,QAC1Ec,EAAU+E,EAAavE,KAAKtB,MAbqC,kDAejEtC,QAAQC,KAAR,MACA4C,EAAS,CAAEjD,KAAMnB,KACjB4E,IAjBiE,0DAA9C,sDDmG6CyE,CAAQC,EAAYC,EAAU5E,EAAWC,KACzG+E,YAAa,SAAC7E,EAAOH,EAAWC,GAAnB,OAA+BR,EC/ErB,SAACU,EAAOH,EAAWC,GAAnB,gDAA+B,WAAMR,GAAN,gBAAAS,EAAA,6DACxDT,EAAS,CAAEjD,KAAMrB,KADuC,kBAG3BiF,KAAMC,IAAIhE,GAAc,YAAa,CAC9DiE,QAAS,CAAE,cAAgB,UAAhB,OAA2BH,MAJc,WAGhD4E,EAHgD,QAMpCvE,KAAKC,QAN+B,sBAMhBkD,MAAM,6BANU,OAQtDlE,EAAS,CAAEjD,KAAMpB,GAAeqB,QAAS,CAAE0D,QAAOjB,KAAM6F,EAAavE,KAAKtB,QAC1Ec,EAAU+E,EAAavE,KAAKtB,MAT0B,kDAWtDtC,QAAQC,KAAR,MACA4C,EAAS,CAAEjD,KAAMnB,KACjB4E,IAbsD,0DAA/B,sDD+E8B+E,CAAY7E,EAAOH,EAAWC,KACnFgE,cAAe,SAACC,EAAQC,EAAmBC,GAA5B,OAAqD3E,EAASwE,GAAcC,EAAQC,EAAmBC,KACtHa,gBAAiB,SAACxI,GAAD,OAAagD,ELnFH,SAAChD,GAAc,MAAO,CAACD,KAAMd,GAAqBe,WKmFtCwI,CAAgBxI,KACvDyI,mBAAoB,SAACzI,GAAD,OAAagD,ELlFH,SAAChD,GAAc,MAAO,CAACD,KAAMb,GAAqBc,WKkFtCyI,CAAmBzI,QAIlDqC,CAA6C4B,aAhF5D,SAAsByE,GACpB,IAAMtM,EAAUZ,KACV2I,EAAUC,cAFW,EAGGC,IAAMC,SAAS,IAHlB,mBAGpB4D,EAHoB,KAGRS,EAHQ,OAICtE,IAAMC,SAAS,IAJhB,mBAIpB6D,EAJoB,KAIVS,EAJU,KA+B3B,OAvBAvE,IAAMO,WAAU,WACd,IAAMlB,EAAQ1F,aAAaC,QAAQ,cAC7ByF,GAAmB,KAAVA,GACbgF,EAAMH,YAAY7E,GAAO,SAACjB,GACxBiG,EAAMlB,cAAc/E,EAAKS,GAAIwF,EAAMF,gBAAiBE,EAAMD,oBAC1DtE,EAAQ3D,KAAK,QACZ,iBAEJ,IAgBD,qBAAKnE,UAAWD,EAAQ0E,KAAxB,SACE,uBAAM4E,SAfO,SAACnK,GAChBA,EAAEoK,iBACiB,KAAfuC,GAAkC,KAAbC,EACvBO,EAAMxE,gBAAgB,qBAAsB,CAAEW,QAAS,YAEvD6D,EAAMT,QAAQC,EAAYC,GAAU,SAAC1F,GACnCiG,EAAMlB,cAAc/E,EAAKS,GAAIwF,EAAMF,gBAAiBE,EAAMD,uBACzD,WACDC,EAAMxE,gBAAgB,oCAAqC,CAAEW,QAAS,cAO9CkB,aAAa,KAAvC,UACE,cAACZ,EAAA,EAAD,CAAU9I,UAAWD,EAAQ8F,SAAUkD,KAAMsD,EAAMlG,QAAQG,QAA3D,SACE,cAAC0C,EAAA,EAAD,CAAkBpJ,MAAM,cAE1B,cAAC+J,EAAA,EAAD,CACE6C,MAAM,oBACN1C,MAAO+B,EACP9B,SAnCiB,SAACC,GAAD,OAAWsC,EAAQtC,EAAMC,OAAOH,QAoCjDtB,QAAQ,WACR5I,MAAM,YACN8J,aAAa,OAEf,qBAAK5J,MAAO,CAAEgF,OAAQ,MACtB,cAAC6E,EAAA,EAAD,CACEjG,KAAK,WACLoG,MAAOgC,EACP/B,SA3CiB,SAACC,GAAD,OAAWuC,EAAQvC,EAAMC,OAAOH,QA4CjD0C,MAAM,QACNhE,QAAQ,WACR5I,MAAM,YACN8J,aAAa,iBAEf,qBAAK5J,MAAO,CAAEgF,OAAQ,MACtB,cAAC2H,GAAA,EAAD,CAAQ/I,KAAK,SAAS8E,QAAQ,YAAY5I,MAAM,YAAhD,6BE5EFT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoF,KAAM,CACJrE,QAAS,OACTO,cAAe,SACfgL,UAAW,QACXjH,SAAU,EACVkB,WAAY,GACZN,QAAS,OA6Cb,IAaeU,gBAbS,SAACC,GACvB,MAAO,CACLE,QAASF,EAAME,YAIQ,SAAAQ,GACzB,MAAO,CACL+F,kBAAmB,SAACb,EAAY3E,EAAWC,GAAxB,OAAoCR,EPd1B,SAACkF,EAAY3E,EAAWC,GAAxB,gDAAoC,WAAMR,GAAN,wBAAAS,EAAA,6DACnET,EAAS,CAAEjD,KFpC6B,+BEmC2B,SAG3D2D,EAAQ1F,aAAaC,QAAQ,cAH8B,SAK1C0F,KAAMyE,KAAKxI,GAAc,eAChD,CACE,QAAW,sBACX,YAAesI,GAEjB,CAAErE,QAAS,CAAE,cAAgB,UAAhB,OAA2BH,MAVyB,UAK3DI,EAL2D,SAWtCA,EAASC,KAA7BC,EAX0D,EAW1DA,QAAS3D,EAXiD,EAWjDA,QACX2D,EAZ4D,sBAY7CF,EAASC,KAZoC,OAcjEf,EAAS,CAAEjD,KFhD2B,6BEgDOC,QAASK,IACtDkD,EAAUlD,EAAQ2I,iBAf+C,kDAiBjE7I,QAAQC,KAAR,MACA4C,EAAS,CAAEjD,KFnD2B,+BEoDtCyD,IAnBiE,0DAApC,sDOcmCuF,CAAkBb,EAAY3E,EAAWC,KACzG3D,mBAAoB,SAACC,GAAD,OAAkBkD,EAASnD,GAAmBC,QAIvDuC,CAA6C4B,aAtD5D,YAA+F,EAAnEzB,QAAoE,IAA3DuG,EAA0D,EAA1DA,kBAAmB7E,EAAuC,EAAvCA,gBAAiBrE,EAAsB,EAAtBA,mBACjEzD,EAAUZ,KACV2I,EAAUC,cAF6E,EAG/DC,IAAMC,SAAS,IAHgD,mBAGtF4D,EAHsF,KAG1E3D,EAH0E,KAsB7F,OACE,qBAAKlI,UAAWD,EAAQ0E,KAAxB,SACE,uBAAM4E,SAhBmB,SAACnK,GAC5BA,EAAEoK,iBACEuC,GAA6B,KAAfA,EAChBa,EAAkBb,GAAY,SAAC5E,GAC7BzD,EAAmB,CAAEqD,GAAII,EAAgBiC,MAAO2C,IAChD/D,EAAQ3D,KAAK,kBAAoB8C,MAChC,WACDY,EAAgB,sCAAiC,CAAEW,QAAS,YAG9DX,EAAgB,mBAAoB,CAAEW,QAAS,aAM/C,UACE,cAACmB,EAAA,EAAD,CACE6C,MAAM,oBACN5M,MAAM,YACNkK,MAAO+B,EACP9B,SAzBa,SAACC,GACpB9B,EAAQ8B,EAAMC,OAAOH,QAyBftB,QAAQ,aAEV,qBAAK1I,MAAO,CAAEgF,OAAQ,MACtB,cAAC2H,GAAA,EAAD,CAAQ/I,KAAK,SAAS8E,QAAQ,YAAY5I,MAAM,YAAhD,uCCjDFT,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoF,KAAM,CACJrE,QAAS,OACTO,cAAe,MACfN,WAAY,YAEduM,OAAQ,GACRC,SAAU,CACRzM,QAAS,OACTO,cAAe,SACfC,eAAgB,WAChBwB,UAAW,aA0Bf,IAMe4D,gBANS,SAAAC,GACtB,MAAO,CACLE,QAASF,EAAME,WAIJH,EA5Bf,YAAmC,IAAZG,EAAW,EAAXA,QACfpG,EAAUZ,KAEhB,OAAIgH,EAAQ2G,OAER,qBAAK9M,UAAWD,EAAQ0E,KAAxB,SACE,sBAAKzE,UAAWD,EAAQ8M,SAAxB,UACE,sBAAM/M,MAAO,CAAEL,SAAU,QAASD,WAAY,KAA9C,SAAsD2G,EAAQC,KAAK1F,OACnE,+BAAOyF,EAAQC,KAAKyF,kBAO1B,cAACY,GAAA,EAAD,CAAQ7M,MAAM,UAAUI,UAAWD,EAAQ6M,OAA3C,sBC9BEzN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoF,KAAM,CACJrE,QAAS,OACTO,cAAe,MACfN,WAAY,gBAKV0M,GAAS,OAoBf,IAMe/G,gBANS,SAAAC,GACtB,MAAO,CACL+G,OAAQ/G,EAAMO,oBAIHR,EAxBf,YAAoC,IAAXgH,EAAU,EAAVA,OACjBjN,EAAUZ,KACRuH,EAAuBsG,EAAvBtG,UAAWJ,EAAY0G,EAAZ1G,QACb1G,EAAQ0G,EAAUyG,GAAUrG,EANtB,UAM0CqG,GAChDlJ,EAAOyC,EAAU,gBAAmBI,EAAY,YAAc,eAEpE,OACE,sBAAK1G,UAAWD,EAAQ0E,KAAxB,UACE,cAAC/E,EAAD,CAAcE,MAAM,OAAOE,MAAO,CAAEL,SAAU,SAAUD,WAAY,IAAK2F,aAAc,GAAvF,qBAGA,cAACzF,EAAD,CAAcE,MAAOA,EAAOE,MAAO,CAAEL,SAAU,SAAUD,WAAY,KAArE,SACGqE,UCaH1E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCoF,KAAM,CACJrE,QAAS,OACTO,cAAe,SACfgL,UAAW,QACXjH,SAAU,GAEZuI,KAAM,CACJ3H,QAAS,IAEX4H,OAAQ,CACNpH,OAAQzG,EAAMyG,OAAOC,OAAS,GAEhCoH,WAAY,CACV/M,QAAS,OACTO,cAAe,MACfC,eAAgB,aAChBwM,aAAc,SACd9H,QAAS,YAEX+H,aAAc,CACZjN,QAAS,OACTO,cAAe,UAEjBoF,OAAQ,CACNlB,MA3BgB,IA4BhByI,WAAY,GAEdC,YAAa,CACX1I,MA/BgB,IAgChByF,gBAAiB,OACjB1K,MAAO,QAET4N,gBAAiB,CACf/C,SAAU,QAEZgD,aAAa,yBACXrN,QAAS,OACTC,WAAY,SACZiF,QAASjG,EAAMqO,QAAQ,EAAG,IAEvBrO,EAAMsO,OAAOC,SALN,IAMVhN,eAAgB,aAElB7B,QAAS,CACP2F,SAAU,EACVY,QAASjG,EAAMqO,QAAQ,IAEzBG,WAAY,GAEZC,KAAM,CACJ1N,QAAS,YA6IE4F,oBAZf,SAAyBC,GACvB,MAAO,CACLE,QAASF,EAAME,YAInB,SAA6BQ,GAC3B,MAAO,CACLoH,SAAU,kBAAMpH,EJ5LmB,CAACjD,KAAMlB,SIgM/BwD,EAxIf,YAAuC,IAAvBG,EAAsB,EAAtBA,QAAYkG,EAAU,2BAC9BtM,EAAUZ,KADoB,EAEZ6I,IAAMC,UAAS,GAFH,mBAE7Bc,EAF6B,KAEvBiF,EAFuB,KAI9BC,EAAmB,WACnB9H,EAAQ2G,QACVkB,GAAQ,IAGNE,EAAoB,WACxBF,GAAQ,IAGJG,EAAW,SAACnD,EAAMnH,EAAMuK,GAAb,OACf,cAAC,IAAD,CAAMnF,GAAI+B,EAAMT,QAAS2D,EAAzB,SACE,eAACG,EAAA,EAAD,CAAUzB,QAAM,EAAhB,UACE,cAAC0B,EAAA,EAAD,UACGF,IAEH,cAACG,EAAA,EAAD,CAAcC,QAAS3K,MAJHA,MAS1B,OACE,cAAC,IAAD,UACE,sBAAK7D,UAAWD,EAAQ0E,KAAxB,UACE,cAACgK,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAQ/J,SAAS,SAAS3E,UAAWD,EAAQmN,OAA7C,SACE,eAACyB,EAAA,EAAD,CAAS3O,UAAWD,EAAQoN,WAA5B,UACGhH,EAAQ2G,QACP,cAAC5C,EAAA,EAAD,CACEtK,MAAM,UACNuK,aAAW,cACXI,QAAS0D,EACTW,KAAK,QACL5O,UAAWD,EAAQ8N,WALrB,SAOE,cAAC,IAAD,MAGJ,cAACgB,EAAA,EAAD,CAAYrG,QAAQ,KAApB,SACE,cAAC,IAAD,CAAMS,GAAG,IAAT,SACE,sBAAKjJ,UAAWD,EAAQsN,aAAxB,UACE,wCACA,cAAC,GAAD,WAIN,qBAAKvN,MAAO,CAAEgP,KAAM,OACpB,cAAC,GAAD,SAIJ,eAACC,EAAA,EAAD,CACE/O,UAAWD,EAAQgG,OACnBiJ,OAAO,OACPjG,KAAMA,EACNkG,OAAQhB,EACRiB,QAAShB,EACTnO,QAAS,CACPsF,MAAOtF,EAAQwN,aAPnB,UAUE,qBAAKvN,UAAWD,EAAQ0N,aAAxB,SACE,cAACvD,EAAA,EAAD,CAAYK,QAAS2D,EAArB,SACE,cAAC,IAAD,CAAiBpO,MAAO,CAAEF,MAAO,eAGrC,sBAAKI,UAAWD,EAAQyN,gBAAxB,UACE,cAACrE,EAAA,EAAD,IACA,cAACgG,EAAA,EAAD,UACGhB,EAAS,IAAK,iBAAkB,cAAC,IAAD,CAAWrO,MAAO,CAAEF,MAAO,aAE7DuG,EAAQ2G,QACP,eAAC,IAAMsC,SAAP,WACE,cAACjG,EAAA,EAAD,IACA,cAACgG,EAAA,EAAD,UACGhB,EAAS,OAAQ,aAAc,cAAC,IAAD,CAAYrO,MAAO,CAAEF,MAAO,aAE9D,cAACuP,EAAA,EAAD,UACE,eAACd,EAAA,EAAD,CAAU9D,QAAS,WACjB8B,EAAM0B,WACNG,KACCtB,QAAM,EAHT,UAIE,cAAC0B,EAAA,EAAD,UACE,cAAC,IAAD,CAAexO,MAAO,CAAEF,MAAO,YAEjC,cAAC2O,EAAA,EAAD,CAAcC,QAAQ,cAJV,qBAWvB,+BACC,cAACa,EAAA,EAAD,CAAWC,UAAU,OAAOtP,UAAWD,EAAQkN,KAAMsC,SAAS,KAA9D,SACGpJ,EAAQ2G,OACN,eAAC,IAAD,WACC,cAAC,IAAD,CAAO9B,KAAK,YAAZ,SACE,2CAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,2CAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,SAIJ,cAAC,GAAD,gB,oBCxLC3L,GAxBDmQ,aAAe,CAC3BC,QAAS,CACPjB,QAAS,CACPvB,KAAM,WAERyC,UAAW,CACTzC,KAAM,WAER0C,MAAO,CACL1C,KAAM2C,KAAIC,MAEZ9K,WAAY,CACV+K,QAAS,WAEXjM,KAAM,CACJ2K,QAAS,UACTkB,UAAW,YAGfK,WAAY,CACVxQ,WAAY,oD,mBCtBVyQ,GAAgB,CACpBlD,QAAQ,EACR1G,KAAM,KACNiB,MAAO,GACPf,SAAS,GAuBI2J,OApBf,WAAwD,IAAhChK,EAA+B,uDAAvB+J,GAAeE,EAAQ,uCAErD,OADApM,QAAQS,IAAI2L,GACJA,EAAOxM,MACb,KAAKrB,GACH,OAAO,2BAAI4D,GAAX,IAAkBK,SAAS,IAC7B,KAAKhE,GAAL,MAC0B4N,EAAOvM,QAAvB0D,EADV,EACUA,MAAOjB,EADjB,EACiBA,KAEf,OADAzE,aAAawO,QAAQ,aAAc9I,GAC5B,2BAAIpB,GAAX,IAAkBK,SAAS,EAAOe,QAAOjB,OAAM0G,QAAQ,IACzD,KAAKvK,GAGL,KAAKC,GAEH,OADAb,aAAayO,WAAW,cACjBJ,GACT,QACE,OAAO/J,I,+BCTP+J,GAAgB,CACpBrF,cAAe,CACb,CACE9D,GAAI,EACJqC,MAAO,cACP1D,SAAU,CACR,CACEqB,GAAI,EACJ9H,QAAS,QACTuC,UAAW,OAEb,CACEuF,GAAI,EACJ9H,QAAS,WACTuC,UAAW,SAKnB+E,oBAAqB,GACrBC,SAAS,GA4CX,SAAS+J,GAAc7K,GACrB,OAAO8K,KAAEC,QAAQ/K,EAAU,OAAQ,QAGrC,SAASgL,GAA4BvK,EAAOwK,GAC1C,OAAOxK,EAAM0E,cAAcvB,KAAI,SAAA8B,GAC7B,OAAIA,EAAMrE,KAAO4J,EAAgBvF,EAC1B,2BAAIA,GAAX,IAAkBV,SAAS,OAI/B,SAASc,GAAsBrF,EAAOxC,GACpC,OAAOwC,EAAM0E,cAAcvB,KAAI,SAAA8B,GAC7B,OAAIA,EAAMrE,KAAOpD,EAAaoD,IAAMZ,EAAMI,oBAAoBQ,IAAMpD,EAAaoD,GACxE,2BAAKpD,GAAZ,IAA0B+G,SAAS,IAE5BU,KAKEwF,OA9Df,WAA6D,IAAhCzK,EAA+B,uDAAvB+J,GAAeE,EAAQ,uCAC1D,OAAQA,EAAOxM,MACb,KAAKZ,GACH,OAAO,2BAAImD,GAAX,IAAkBK,SAAS,IAC7B,KAAKvD,GACH,OAAO,2BAAIkD,GAAX,IAAkB0E,cAAeuF,EAAOvM,QAAS2C,SAAS,IAC5D,KAAKtD,GACH,OAAO,2BAAIiD,GAAX,IAAkB0E,cAAe,GAAIrE,SAAS,IAEhD,KAAKrD,GACH,OAAO,2BAAIgD,GAAX,IAAkBK,SAAS,IAC7B,KAAKpD,GAAL,MACqCgN,EAAOvM,QAAlCF,EADV,EACUA,aAAc+B,EADxB,EACwBA,SACtB,OAAO,2BAAIS,GAAX,IAAkBK,SAAS,EAAOD,oBAAoB,2BAAK5C,GAAN,IAAoB+B,SAAU6K,GAAa7K,OAClG,KAAKrC,GACH,OAAO,2BAAI8C,GAAX,IAAkBK,SAAS,EAAOD,oBAAoB,2BAAKJ,EAAMI,qBAAZ,IAAiCb,SAAU,OAElG,KAAK5C,GACH,OAAO,2BAAIqD,GAAX,IAAkB0E,cAAc,GAAD,oBAAM1E,EAAM0E,eAAZ,CAA2BuF,EAAOvM,YACnE,KAAKd,GACH,OAAO,2BAAIoD,GAAX,IAAkB0E,cAAeW,GAAqBrF,EAAOiK,EAAOvM,WAEtE,KAAKhB,GACH,GAAIsD,EAAMI,oBAAoBQ,GAAI,CAChC,IAAMrB,EAAQ,uBAAOS,EAAMI,oBAAoBb,UAAjC,CAA2C0K,EAAOvM,UAChE,OAAO,2BAAIsC,GAAX,IAAkBI,oBAAoB,2BAAKJ,EAAMI,qBAAZ,IAAiCb,SAAU6K,GAAa7K,OAE7F,OAAOS,EAGX,KAAKxD,GACH,OAAO,2BAAIwD,GAAX,IAAkB0E,cAAe6F,GAA2BvK,EAAOiK,EAAOvM,QAAQkD,IAAKR,oBAAqB6J,EAAOvM,UACrH,KAAKjB,GACH,OAAO,2BAAIuD,GAAX,IAAkBI,oBAAqB,KACzC,KAAK7D,GACH,OAAOwN,GACT,QACE,OAAO/J,IClEP+J,GAAgB,CACpB5J,KAAM,KACNM,WAAW,EACXJ,SAAS,EACTC,OAAQ,MA2BKoK,OAxBf,WAAuD,IAAhC1K,EAA+B,uDAAvB+J,GAAeE,EAAQ,uCACpD,OAAQA,EAAOxM,MACb,KAAKpB,GACH,OAAO,2BAAI2D,GAAX,IAAkBG,KAAM8J,EAAOvM,QAAQyC,OACzC,KAAK7D,GACH,OAAO,2BAAI0D,GAAX,IAAkBG,KAAM,OAE1B,KAAKhD,GACH,OAAO,2BAAI6C,GAAX,IAAkBK,SAAS,EAAMI,WAAW,IAC9C,KAAKrD,GACH,MAAO,CAACqD,WAAW,EAAMJ,SAAS,EAAOC,OAAQ2J,EAAOvM,SAC1D,KAAKL,GAEH,OADAkB,KACOwL,GAET,KAAKxN,GAGH,OAFAgC,KACAyB,EAAMM,QAAUN,EAAMM,OAAOqK,YAAW,kBAAM9M,QAAQS,IAAI,0BACnDyL,GACT,QACE,OAAO/J,IChCE4K,gBAAgB,CAC7B1K,QAAS8J,GACTxM,aAAciN,GACdlK,iBAAkBmK,KCIpB,IAAMG,GCPS,SAAwBC,GACrC,IAAMC,EAAc,CAACC,MAGfC,EAAY,CAFSC,KAAe,WAAf,EAAmBH,IAGxCI,EAAoBC,KAAO,WAAP,EAAWH,GAIrC,OAFcI,aAAYC,GAAaR,EAAgBK,GDA3CI,GAEDC,GAAwB,WAC/B,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cAAcC,SAAS,UAAUC,MAAK,SAAUC,OAGvDC,OAAM,SAAUC,WAQzBT,KAEAU,IAASC,OACP,eAACC,EAAA,EAAD,CAAehT,MAAOA,GAAtB,UAEE,cAACoP,EAAA,EAAD,IACA,cAAC,IAAD,CAAUqC,MAAOA,GAAjB,SACE,cAAC,IAAD,CAAkBwB,SAAU,EAA5B,SACE,cAAC,GAAD,WAINC,SAASC,cAAc,Y","file":"static/js/main.708f72f8.chunk.js","sourcesContent":["import CryptoJS from 'crypto-js'\n\nconst JsonFormatter = {\n  stringify: (cipherParams) => {\n    const jsonObj = { ct: cipherParams.ciphertext.toString(CryptoJS.enc.Base64) }\n    if (cipherParams.iv) jsonObj.iv = cipherParams.iv.toString();\n    if (cipherParams.salt) jsonObj.s = cipherParams.salt.toString();\n    return JSON.stringify(jsonObj);\n  },\n  parse: (jsonStr) => {\n    const jsonObj = JSON.parse(jsonStr);\n\n    const cipherParams = CryptoJS.lib.CipherParams.create({\n      ciphertext: CryptoJS.enc.Base64.parse(jsonObj.ct)\n    });\n    if (jsonObj.iv) cipherParams.iv = CryptoJS.enc.Hex.parse(jsonObj.iv);\n    if (jsonObj.s) cipherParams.salt = CryptoJS.enc.Hex.parse(jsonObj.s);\n    return cipherParams;\n  }\n};\n\nexport const parseBase64 = (content) => {\n  try {\n    return JSON.parse(atob(content.split('.')[1]));\n  } catch (e) {\n    return null;\n  }\n};\n\nexport const encryptMessage = (tkn, message) => JSON.parse(CryptoJS.AES.encrypt(message, tkn.iss, {\n  format: JsonFormatter\n}).toString());\n\nexport const decryptMessage = (tkn, encryptedObject) => CryptoJS.AES.decrypt(encryptedObject, tkn.iss, {\n  format: JsonFormatter\n}).toString(CryptoJS.enc.Utf8);\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  terminal: {\n    fontFamily: 'VCRMono',\n    fontWeight: 100,\n    fontSize: 16\n  }\n}))\n\nexport default function TerminalText ({ prefix, color, children, style = {} }) {\n  const classes = useStyles()\n  return (\n    <span className={classes.terminal} style={{ ...style, color: color || '#fff' }}>\n      {prefix}{children}\n    </span>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { decryptMessage, parseBase64 } from '../crypto'\n\nimport TerminalText from './TerminalText'\n\nconst useStyles = makeStyles((theme) => ({\n  line: {\n    marginBottom: 4,\n    marginTop: 4,\n    display: 'grid',\n    alignItems: 'flex-start',\n    overflowWrap: 'anywhere',\n    gridGap: 10\n  },\n  bubble: {\n    gridArea: 'bubble',\n    color: '#fff'\n  },\n  name: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    gridArea: 'name',\n    overflowWrap: 'anywhere'\n  },\n  none: {\n    gridArea: 'none',\n  }\n}))\n\nfunction MessageBubble ({ yourName, targetName, content, time, direction }) {\n  const classes = useStyles()\n  const outbound = direction === 'out'\n\n  const normalStyle = {\n    gridTemplateAreas: '\"name bubble none\"',\n    gridTemplateColumns: 'auto minmax(min-content, 100%) auto',\n    textAlign: 'left'\n  }\n  const outboundStyle = {\n    gridTemplateAreas: '\"none bubble name\"',\n    gridTemplateColumns: 'auto minmax(min-content, 100%) auto',\n    textAlign: 'right'\n  }\n  const color = outbound ? '#b55f5f' : '#b58f5f'\n  const formattedTime = time.toString().substr(10)\n  const messageText = decryptMessage(parseBase64(localStorage.getItem('auth_token')), JSON.stringify(content))\n\n  return (\n    <div className={classes.line} style={outbound ? outboundStyle : normalStyle}>\n      <div className={classes.bubble}>\n        <TerminalText style={{ fontWeight: 100 }}>{messageText}</TerminalText>\n      </div>\n      <div className={classes.name}>\n        <TerminalText color={color} style={{ fontWeight: 500 }}>\n          {outbound ? '@' + yourName : '@' + targetName}\n        </TerminalText>\n        <TerminalText color={color} style={{ fontSize: '0.8em'}}>\n          {formattedTime}\n        </TerminalText>\n      </div>\n      <span className={classes.none}></span>\n    </div>\n  )\n}\n\nexport default MessageBubble\n","import { Socket } from 'phoenix'\nimport { encryptMessage, parseBase64 } from './crypto'\nimport { WEBSOCKET_URL } from './consts'\n\nlet userChannel;\nlet conversationChannel;\n\nexport const createAndConnectSocket = () => {\n  const token = localStorage.getItem('auth_token')\n  const socket = new Socket(WEBSOCKET_URL, {params: {token: token}})\n  socket.connect();\n  return socket\n}\n\nexport const joinConversation = (socket, conversationId, onReceivedMessageCallback) => {\n  if (conversationChannel) leaveConversation();\n\n  conversationChannel = socket.channel(`conversation:${conversationId}`);\n  conversationChannel.join().receive('ok', (responsePayload) => {\n    console.log('joined conversation', responsePayload);\n  });\n\n  conversationChannel.on(\"new_message\", (response) => {\n    onReceivedMessageCallback(response.message)\n  })\n}\n\nexport const sendMessage = (text) => {\n  if (!conversationChannel) console.warn('tried to send message disconnected from conversationChannel (sendMessage)');\n  const contentPayload = encryptMessage(parseBase64(localStorage.getItem('auth_token')), text)\n  conversationChannel.push(\"send_message\", contentPayload)\n}\n\nexport const leaveConversation = () => {\n  if (!conversationChannel) return;\n  conversationChannel.leave(500).receive(\"ok\", () => console.log(\"left channel conversation\"));\n  conversationChannel = null;\n}\n\nexport const joinUser = (socket, userId, onNewConversation, onUpdateConversation) => {\n  if (userChannel) leaveUser();\n\n  userChannel = socket.channel(`conversation:lobby`);\n  userChannel.join().receive('ok', (responsePayload) => {\n    console.log('joined user channel', responsePayload);\n  });\n\n  userChannel.on(\"new_conversation\", (response) => {\n    onNewConversation(response.conversation)\n  })\n  userChannel.on(\"upd_conversation\", (response) => {\n    onUpdateConversation(response.conversation)\n  })\n}\n\nexport const leaveUser = () => {\n  if (!userChannel) return;\n  userChannel.leave(500).receive(\"ok\", () => console.log(\"left channel conversation\"));\n  userChannel = null;\n}\n","\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\"\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"\n\nexport const LOGOUT = \"LOGOUT\"\n\nexport const SELECT_CONVERSATION = \"SELECT_CONVERSATION\"\nexport const CLEAR_SELECT_CONVERSATION = \"CLEAR_SELECT_CONVERSATION\"\nexport const CONVERSATION_RECEIVED_MESSAGE = \"CONVERSATION_RECEIVED_MESSAGE\"\n\nexport const ON_NEW_CONVERSATION = \"ON_NEW_CONVERSATION\"\nexport const ON_UPD_CONVERSATION = \"ON_UPD_CONVERSATION\"\n\nexport const FETCH_CONVERSATION_REQUEST = \"FETCH_CONVERSATION_REQUEST\"\nexport const FETCH_CONVERSATION_SUCCESS = \"FETCH_CONVERSATION_SUCCESS\"\nexport const FETCH_CONVERSATION_FAILURE = \"FETCH_CONVERSATION_FAILURE\"\n\nexport const FETCH_CURRENT_MESSAGES_REQUEST = \"FETCH_CURRENT_MESSAGES_REQUEST\"\nexport const FETCH_CURRENT_MESSAGES_SUCCESS = \"FETCH_CURRENT_MESSAGES_SUCCESS\"\nexport const FETCH_CURRENT_MESSAGES_FAILURE = \"FETCH_CURRENT_MESSAGES_FAILURE\"\n\nexport const START_CONVERSATION_REQUEST = \"START_CONVERSATION_REQUEST\"\nexport const START_CONVERSATION_SUCCESS = \"START_CONVERSATION_SUCCESS\"\nexport const START_CONVERSATION_FAILURE = \"START_CONVERSATION_FAILURE\"\n\n\nexport const SOCKET_REQUEST = \"SOCKET_REQUEST\"\nexport const SOCKET_CONNECT = \"SOCKET_CONNECT\"\nexport const SOCKET_FAILURE = \"SOCKET_FAILURE\"\n\n","\nconst PROD = true;\n\nexport const BACKEND_URL = PROD ? \"https://polar-ridge-40128.herokuapp.com\" : \"http://localhost:4000\"\nexport const WEBSOCKET_URL = PROD ? \"wss://polar-ridge-40128.herokuapp.com/socket\" : \"ws://localhost:4000/socket\"\n","import axios from 'axios'\nimport {\n  SELECT_CONVERSATION,\n  FETCH_CONVERSATION_REQUEST,\n  FETCH_CONVERSATION_SUCCESS,\n  FETCH_CONVERSATION_FAILURE,\n  START_CONVERSATION_REQUEST,\n  START_CONVERSATION_SUCCESS,\n  START_CONVERSATION_FAILURE,\n  FETCH_CURRENT_MESSAGES_REQUEST,\n  FETCH_CURRENT_MESSAGES_SUCCESS,\n  FETCH_CURRENT_MESSAGES_FAILURE,\n  CONVERSATION_RECEIVED_MESSAGE,\n  CLEAR_SELECT_CONVERSATION,\n  ON_NEW_CONVERSATION,\n  ON_UPD_CONVERSATION,\n} from '../actionTypes'\nimport { BACKEND_URL } from '../../consts'\n\nexport const selectConversation = (conversation) => { return {type: SELECT_CONVERSATION, payload: conversation} }\n\nexport const clearSelectConversation = () => { return {type: CLEAR_SELECT_CONVERSATION } }\n\nexport const addConversation = (payload) => { return {type: ON_NEW_CONVERSATION, payload } }\n\nexport const updateConversation = (payload) => { return {type: ON_UPD_CONVERSATION, payload } }\n\nexport const onReceivedMessage = (payload, user) => {\n  return {\n    type: CONVERSATION_RECEIVED_MESSAGE,\n    payload: {\n      id: payload.id,\n      content: payload.content,\n      time: payload.time,\n      direction: payload.user_id === user.id ? 'out' : 'in'\n    }\n  }\n}\n\nexport const fetchConversations = () => async dispatch => {\n  dispatch({ type: FETCH_CONVERSATION_REQUEST})\n  try {\n    const token = localStorage.getItem('auth_token')\n\n    const response = await axios.get(BACKEND_URL + '/api/conversations', {\n      headers: { 'Authorization': `Bearer ${token}`}\n    });\n    const {success, conversations} = response.data;\n    if (!success) throw Error(\"could fetch conversations\")\n\n    dispatch({ type: FETCH_CONVERSATION_SUCCESS, payload: conversations })\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: FETCH_CONVERSATION_FAILURE })\n  }\n}\n\nexport const startConversation = (secretCode, onSuccess, onError) => async dispatch => {\n  dispatch({ type: START_CONVERSATION_REQUEST})\n  try {\n    const token = localStorage.getItem('auth_token')\n\n    const response = await axios.post(BACKEND_URL + '/api/message',\n    {\n      'content': 'Vamos bater um lero',\n      'secret_code': secretCode\n    },\n    { headers: { 'Authorization': `Bearer ${token}`} });\n    const {success, message} = response.data;\n    if (!success) throw response.data\n\n    dispatch({ type: START_CONVERSATION_SUCCESS, payload: message })\n    onSuccess(message.conversation_id)\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: START_CONVERSATION_FAILURE })\n    onError()\n  }\n}\n\nexport const fetchCurrentMessages = (conversationId, onSuccess, onError) => async dispatch => {\n  dispatch({ type: FETCH_CURRENT_MESSAGES_REQUEST})\n  try {\n    const token = localStorage.getItem('auth_token')\n\n    const response = await axios.get(BACKEND_URL + `/api/conversations/${conversationId}/messages`,\n    { headers: { 'Authorization': `Bearer ${token}`} });\n    const {success} = response.data;\n    if (!success) throw response.data\n\n    dispatch({ type: FETCH_CURRENT_MESSAGES_SUCCESS, payload: response.data })\n    onSuccess()\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: FETCH_CURRENT_MESSAGES_FAILURE })\n    onError()\n  }\n}\n","import React, { useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link, useHistory } from \"react-router-dom\"\nimport { withSnackbar } from 'notistack'\n\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport InfiniteScroll from 'react-infinite-scroll-component'\n\nimport HttpsIcon from '@material-ui/icons/Https'\nimport Divider from '@material-ui/core/Divider'\nimport TextField from '@material-ui/core/TextField'\nimport IconButton from '@material-ui/core/IconButton'\nimport SendIcon from '@material-ui/icons/Send'\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nimport MessageBubble from '../components/MessageBubble'\nimport TerminalText from '../components/TerminalText'\n\nimport { fetchCurrentMessages, onReceivedMessage, clearSelectConversation } from '../store/actions/conversationActions'\nimport { joinConversation, leaveConversation, sendMessage } from '../socket'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n    position: 'relative',\n  },\n  socketDown: {\n    width: '100%',\n    height: '100%',\n    background: '#00000055',\n    position: 'absolute'\n  },\n  head: {\n    paddingBottom: 8,\n    paddingLeft: 5,\n    paddingRight: 5,\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    gridColumnGap: 15,\n    alignItems: 'center',\n    textAlign: 'right'\n  },\n  paper: {\n    padding: '10px 15px',\n    color: '#fff',\n    display: 'grid',\n    gridTemplateRows: '55px 10px 55vh 10px 40px'\n  },\n  messages: { \n    display: 'flex',\n    flexDirection: 'column-reverse',\n    overflowX: 'hidden',\n    overflowY: 'overlay',\n    paddingRight: 20,\n    paddingBottom: 5,\n  },\n  inputBar: {\n    display: 'grid',\n    gridTemplateColumns: '1fr 40px',\n    alignItems: 'center',\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}))\n\nfunction Conversation ({\n  currentUser,\n  conversation,\n  fetchCurrentMessages,\n  onReceivedMessage,\n  socket,\n  socketConnected,\n  enqueueSnackbar,\n  clearSelectConversation,\n  loading\n}) {\n  let history = useHistory()\n  const classes = useStyles()\n  const [text, setText] = React.useState('')\n  const [channel, setChannel] = React.useState(false)\n  const messageInput = useRef(null)\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n  const focusInput = () => messageInput.current.focus()\n\n  React.useEffect(() => {\n    fetchCurrentMessages(\n      conversation.id,\n      () => {},\n      () => {\n      enqueueSnackbar('Erro ao carregar mensagens', { variant: 'warning' })\n      history.push(\"/\")\n    })\n    return () => {\n      leaveConversation()\n      clearSelectConversation()\n    }\n  }, [])\n\n  React.useEffect(() => {\n    if (!channel && socketConnected) {\n      try {\n        console.log('using effect to JOINCONVERSATION')\n        joinConversation(socket, conversation.id, (message) => {\n          onReceivedMessage(message, currentUser)\n        })\n        setChannel(true)\n      } catch (e) {\n        console.warn(e)\n        setChannel(false)\n      }\n    }\n  }, [socketConnected])\n\n  const trySendMessage = (e) => {\n    e.preventDefault()\n    if (!channel) {\n      enqueueSnackbar('Não conectado ao canal', { variant: 'warning' })\n      return\n    }\n    if (!text || text === '') {\n      enqueueSnackbar('Digite a mensagem', { variant: 'warning' })\n      return\n    }\n    try {\n      sendMessage(text)\n    } finally {\n      setText('')\n      focusInput()\n    }\n  }\n\n  const renderMessages = () => {\n    if (loading) return null;\n\n    if (socketConnected && conversation && conversation.messages) {\n      return (\n        <div className={classes.messages}>\n          {conversation.messages && conversation.messages.map(message => {\n            return (\n              <MessageBubble \n                key={message.id}\n                yourName={currentUser.name}\n                targetName={conversation.title}\n                content={message.content}\n                direction={message.direction}\n                time={message.time}\n              />\n            )\n          })}\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {!socketConnected && <div className={classes.socketDown}></div>}\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <div className={classes.paper}>\n        <div className={classes.head}>\n          <Link to=\"/\">\n            <ArrowBackIcon />\n          </Link>\n          <TerminalText prefix=\"#/ @\">{conversation.title}</TerminalText>\n          <HttpsIcon />\n        </div>\n        <Divider />\n        <div className={classes.messages}>\n          {renderMessages()}\n        </div>\n        <Divider />\n        <form className={classes.inputBar} onSubmit={trySendMessage} noValidate autoComplete={'false'}>\n          <TextField\n            autoFocus={true}\n            inputRef={messageInput}\n            color=\"primary\"\n            value={text}\n            onChange={handleChange}\n          />\n          <IconButton aria-label=\"delete\" className={classes.margin} size=\"small\" type=\"submit\">\n            <SendIcon fontSize=\"default\" style={{ color: '#fff' }} />\n          </IconButton>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.account.user,\n    conversation: state.conversation.currentConversation,\n    loading: state.conversation.loading,\n    socket: state.socketConnection.socket,\n    socketConnected: state.socketConnection.connected,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onReceivedMessage: (message, user) => dispatch(onReceivedMessage(message, user)),\n    clearSelectConversation: () => dispatch(clearSelectConversation()),\n    fetchCurrentMessages: (conversationId, onSuccess, onError) => dispatch(fetchCurrentMessages(conversationId, onSuccess, onError))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Conversation))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from \"react-router-dom\"\n\nimport TerminalText from './TerminalText'\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport { selectConversation } from '../store/actions/conversationActions'\n\nconst useStyles = makeStyles((theme) => ({\n  conversation: {\n    padding: '10px 15px',\n    marginBottom: 8,\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr',\n    gridColumnGap: 15,\n    alignItems: 'center',\n    backgroundColor: '#4f4f4f',\n    color: '#fff'\n  }\n}))\n\nfunction ConversationCard ({ id, conversation, selectConversation }) {\n  const classes = useStyles()\n\n  return (\n    <Link to={`/conversations/${id}`} onClick={() => selectConversation(conversation)}>\n      <TerminalText prefix={`<${id}> conversation#/ `}>{conversation.title}</TerminalText>\n      {conversation.updated && (<TerminalText prefix=' ' color=\"red\">{'<!!>'}</TerminalText>)}\n    </Link>\n  )\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    selectConversation: (conversation) => dispatch(selectConversation(conversation))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(ConversationCard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n} from \"react-router-dom\";\n\nimport Conversation from './Conversation'\nimport ConversationCard from '../components/ConversationCard'\n\nimport { fetchConversations } from '../store/actions/conversationActions'\nimport { ContactSupportOutlined } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflow: 'hidden',\n    maxHeight: '100vh'\n  },\n  conversations: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}))\n\nfunction ConversationRouter ({ account, conversations, loading, fetchConversations }) {\n  let match = useRouteMatch();\n  const classes = useStyles()\n\n  React.useEffect(() => {\n    fetchConversations()\n  }, [])\n\n  const renderConversations = () => {\n    if (loading) {\n      return <span>loading...</span>\n    }\n\n    if (!conversations || conversations.length == 0) {\n      return <span>Nenhuma conversa...</span>\n    }\n\n    return conversations.map(convs => {\n      return (<ConversationCard key={convs.id} id={convs.id} conversation={convs} />)\n    })\n  }\n\n  return (\n    <div className={classes.root}>\n      <div style={{ height: 10 }} />\n      <Switch>\n        <Route path={`${match.path}conversations/:conversationId`}>\n          <Conversation />\n        </Route>\n        <Route path={match.path}>\n          <div className={classes.conversations}>\n            {renderConversations()}\n          </div>\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    account: state.account,\n    conversations: state.conversation.conversations,\n    loading: state.conversation.loading,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchConversations: () => dispatch(fetchConversations())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConversationRouter)\n","import {\n  SOCKET_REQUEST,\n  SOCKET_CONNECT,\n  SOCKET_FAILURE,\n} from '../actionTypes'\nimport { createAndConnectSocket, joinUser } from '../../socket'\n\nexport const connectSocket = (userId, onNewConversation, onUpdateConversation) => dispatch => {\n  dispatch({ type: SOCKET_REQUEST })\n  try {\n    const socket = createAndConnectSocket()\n    joinUser(socket, userId, onNewConversation, onUpdateConversation)\n    dispatch({ type: SOCKET_CONNECT, payload: socket })\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: SOCKET_FAILURE })\n  }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withSnackbar } from 'notistack'\n\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { doLogin, doAutoLogin } from '../store/actions/accountActions'\nimport { addConversation, updateConversation } from '../store/actions/conversationActions'\nimport { connectSocket } from '../store/actions/socketActions'\nimport { useHistory } from 'react-router'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    flexGrow: 1,\n    paddingTop: 15,\n    padding: 8\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}))\n\nfunction LoginScreen (props) {\n  const classes = useStyles()\n  const history = useHistory()\n  const [secretCode, setCode] = React.useState('');\n  const [password, setPass] = React.useState('');\n  const handleChangeCode = (event) => setCode(event.target.value)\n  const handleChangePass = (event) => setPass(event.target.value)\n\n  React.useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    if (!!token && token !== '') {\n      props.doAutoLogin(token, (user) => {\n        props.connectSocket(user.id, props.addConversation, props.updateConversation)\n        history.push(\"/\")\n      }, () => {})\n    }\n  }, [])\n\n  const tryLogin = (e) => {\n    e.preventDefault()\n    if (secretCode === '' || password === '') {\n      props.enqueueSnackbar('Preencha os campos', { variant: 'warning' })\n    } else {\n      props.doLogin(secretCode, password, (user) => {\n        props.connectSocket(user.id, props.addConversation, props.updateConversation)\n      }, () => {\n        props.enqueueSnackbar('Login falhou. Verifique os dados.', { variant: 'error' })\n      })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={tryLogin} autoComplete=\"no\">\n        <Backdrop className={classes.backdrop} open={props.account.loading}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        <TextField\n          label=\"Código secreto\"\n          value={secretCode}\n          onChange={handleChangeCode}\n          variant=\"outlined\"\n          color=\"secondary\"\n          autoComplete=\"no\"\n        />\n        <div style={{ height: 10 }} />\n        <TextField\n          type=\"password\"\n          value={password}\n          onChange={handleChangePass}\n          label=\"Senha\"\n          variant=\"outlined\"\n          color=\"secondary\"\n          autoComplete=\"new-password\"\n        />\n        <div style={{ height: 15 }} />\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Entrar\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    doLogin: (secretCode, password, onSuccess, onError) => dispatch(doLogin(secretCode, password, onSuccess, onError)),\n    doAutoLogin: (token, onSuccess, onError) => dispatch(doAutoLogin(token, onSuccess, onError)),\n    connectSocket: (userId, onNewConversation, onUpdateConversation) => dispatch(connectSocket(userId, onNewConversation, onUpdateConversation)),\n    addConversation: (payload) => dispatch(addConversation(payload)),\n    updateConversation: (payload) => dispatch(updateConversation(payload)),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(LoginScreen))\n","import axios from 'axios'\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from '../actionTypes'\nimport { BACKEND_URL } from '../../consts'\n\nexport const doLogin = (secretCode, password, onSuccess, onError) => async dispatch => {\n  dispatch({ type: LOGIN_REQUEST})\n  try {\n    const loginResponse = await axios.post(BACKEND_URL + '/api/login', { 'secret_code': secretCode, 'password': password });\n    const {success, token} = loginResponse.data;\n    if (!success) throw loginResponse;\n\n    const userResponse = await axios.get(BACKEND_URL + '/api/user', {\n      headers: { 'Authorization': `Bearer ${token}`}\n    });\n    if (!userResponse.data.success) userResponse;\n\n    dispatch({ type: LOGIN_SUCCESS, payload: { token, user: userResponse.data.user } })\n    onSuccess(userResponse.data.user)\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: LOGIN_FAILURE })\n    onError()\n  }\n}\n\nexport const doAutoLogin = (token, onSuccess, onError) => async dispatch => {\n  dispatch({ type: LOGIN_REQUEST})\n  try {\n    const userResponse = await axios.get(BACKEND_URL + '/api/user', {\n      headers: { 'Authorization': `Bearer ${token}`}\n    });\n    if (!userResponse.data.success) throw Error(\"could not fetch user data\")\n\n    dispatch({ type: LOGIN_SUCCESS, payload: { token, user: userResponse.data.user } })\n    onSuccess(userResponse.data.user)\n  } catch (e) {\n    console.warn(e)\n    dispatch({ type: LOGIN_FAILURE })\n    onError()\n  }\n}\n\nexport const doLogout = () => { return {type: LOGOUT} }\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { withSnackbar } from 'notistack'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { startConversation, selectConversation } from '../store/actions/conversationActions'\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    flexGrow: 1,\n    paddingTop: 15,\n    padding: 8\n  },\n}))\n\nfunction NewConversation ({ account, startConversation, enqueueSnackbar, selectConversation }) {\n  const classes = useStyles()\n  const history = useHistory()\n  const [secretCode, setText] = React.useState('');\n  const handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const tryStartConversation = (e) => {\n    e.preventDefault();\n    if (secretCode && secretCode !== '') {\n      startConversation(secretCode, (conversationId) => {\n        selectConversation({ id: conversationId, title: secretCode })\n        history.push(\"/conversations/\" + conversationId)\n      }, () => {\n        enqueueSnackbar('Código secreto não encontrado', { variant: 'info' })\n      })\n    } else {\n      enqueueSnackbar('Preencha o campo', { variant: 'warning' })\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <form onSubmit={tryStartConversation}>\n        <TextField\n          label=\"Código secreto\"\n          color=\"secondary\"\n          value={secretCode}\n          onChange={handleChange}\n          variant=\"outlined\"\n        />\n        <div style={{ height: 15 }} />\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n          Iniciar Conversa\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    account: state.account\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    startConversation: (secretCode, onSuccess, onError) => dispatch(startConversation(secretCode, onSuccess, onError)),\n    selectConversation: (conversation) => dispatch(selectConversation(conversation))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(NewConversation))\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline'\n  },\n  button: {},\n  userName: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    textAlign: 'right'\n  }\n}))\n\nfunction UserStatus ({ account }) {\n  const classes = useStyles()\n\n  if (account.logged) {\n    return (\n      <div className={classes.root}>\n        <div className={classes.userName}>\n          <span style={{ fontSize: '1.2em', fontWeight: 500 }}>{account.user.name}</span>\n          <span>{account.user.secretCode}</span>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <Button color=\"inherit\" className={classes.button}>\n      Login\n    </Button>\n  )\n  \n}\n\nconst mapStateToProps = state => {\n  return {\n    account: state.account\n  }\n}\n\nexport default connect(mapStateToProps)(UserStatus)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport TerminalText from './TerminalText'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n}))\n\nconst GREEN = \"#FFCF99\"\nconst ORANGE = \"#666\"\n\nfunction SocketStatus ({ status }) {\n  const classes = useStyles()\n  const { connected, loading } = status\n  const color = loading ? ORANGE : (connected ? GREEN : ORANGE)\n  const text = loading ? 'connecting...' : (connected ? 'connected' : 'disconnected')\n\n  return (\n    <div className={classes.root}>\n      <TerminalText color='#FFF' style={{ fontSize: '0.65em', fontWeight: 100, paddingRight: 5 }}> \n        status: \n      </TerminalText>\n      <TerminalText color={color} style={{ fontSize: '0.65em', fontWeight: 600 }}> \n        {text}\n      </TerminalText>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    status: state.socketConnection\n  }\n}\n\nexport default connect(mapStateToProps)(SocketStatus)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport StarIcon from '@material-ui/icons/Star'\nimport ArchiveIcon from '@material-ui/icons/Archive'\nimport ForumIcon from '@material-ui/icons/Forum'\nimport CreateIcon from '@material-ui/icons/Create'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n\nimport ConversationRouter from './screens/ConversationRouter'\nimport LoginScreen from './screens/LoginScreen'\nimport NewConversation from './screens/NewConversation'\nimport UserStatus from './components/UserStatus'\nimport SocketStatus from './components/SocketStatus'\n\nimport { doLogout } from './store/actions/accountActions'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    flexGrow: 1,\n  },\n  main: {\n    padding: 15,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  appToolbar: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignContent: 'center',\n    padding: '3px 15px'\n  },\n  toolbarTitle: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#333',\n    color: '#fff'\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  menuButton: {\n  },\n  hide: {\n    display: 'none',\n  },\n}))\n\n\nfunction App ({ account, ...props  }) {\n  const classes = useStyles()\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    if (account.logged)\n      setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const menuLink = (path, text, icon) => (\n    <Link to={path} onClick={handleDrawerClose}>\n      <ListItem button key={text}>\n        <ListItemIcon>\n          {icon}\n        </ListItemIcon>\n        <ListItemText primary={text} />\n      </ListItem>\n    </Link>\n  );\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar className={classes.appToolbar}>\n            {account.logged && (\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={classes.menuButton}\n              >\n                <MenuIcon />\n              </IconButton>\n            )}\n            <Typography variant=\"h6\">\n              <Link to=\"/\">\n                <div className={classes.toolbarTitle}>\n                  <span>Lero</span>\n                  <SocketStatus />\n                </div>\n              </Link>\n            </Typography>\n            <div style={{ flex: '1' }} />\n            <UserStatus />\n          </Toolbar>\n        </AppBar>\n\n        <SwipeableDrawer\n          className={classes.drawer}\n          anchor=\"left\"\n          open={open}\n          onOpen={handleDrawerOpen}\n          onClose={handleDrawerClose}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              <ChevronLeftIcon style={{ color: 'white' }} />\n            </IconButton>\n          </div>\n          <div className={classes.drawerContainer}>\n            <Divider />\n            <List>\n              {menuLink(\"/\", \"/conversations\", <ForumIcon style={{ color: '#fff' }} />)}\n            </List>\n            {account.logged && (\n              <React.Fragment>\n                <Divider />\n                <List>\n                  {menuLink(\"/new\", \"/start_new\", <CreateIcon style={{ color: '#fff' }} />)}\n                </List>\n                <List>\n                  <ListItem onClick={() => {\n                    props.doLogout()\n                    handleDrawerClose()\n                  }} button key='logout'>\n                    <ListItemIcon>\n                      <ExitToAppIcon style={{ color: '#fff' }}/>\n                    </ListItemIcon>\n                    <ListItemText primary='/logout' />\n                  </ListItem>\n                </List>\n              </React.Fragment>)\n            }\n          </div>\n        </SwipeableDrawer>\n        {<main>\n          <Container component=\"main\" className={classes.main} maxWidth=\"md\">\n            {account.logged \n            ? (<Switch>\n                <Route path=\"/favorite\">\n                  <p>Favorite</p>\n                </Route>\n                <Route path=\"/archived\">\n                  <p>Archived</p>\n                </Route>\n                <Route path=\"/new\">\n                  <NewConversation />\n                </Route>\n                <Route path=\"/\">\n                  <ConversationRouter />\n                </Route>\n              </Switch>)\n            : (\n              <LoginScreen />\n            )}\n          </Container>\n        </main>}\n\n      </div>\n    </Router>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    account: state.account\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    doLogout: () => dispatch(doLogout())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#7d130c',\n    },\n    secondary: {\n      main: '#FFCF99',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#1E1E24',\n    },\n    text: {\n      primary: '#FFF8F0',\n      secondary: '#e6e6e6'\n    },\n  },\n  typography: {\n    fontFamily: \"SourceCodePro, RetroGaming, VCRMono, monospace\"\n  },\n});\n\nexport default theme;\n","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT } from '../actionTypes'\n\nconst INITIAL_STATE = {\n  logged: false,\n  user: null,\n  token: \"\",\n  loading: false\n}\n\nfunction accountReducer(state = INITIAL_STATE, action) {\n  console.log(action)\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {...state, loading: true}\n    case LOGIN_SUCCESS:\n      const { token, user } = action.payload\n      localStorage.setItem('auth_token', token);\n      return {...state, loading: false, token, user, logged: true}\n    case LOGIN_FAILURE:\n      localStorage.removeItem('auth_token')\n      return INITIAL_STATE\n    case LOGOUT:\n      localStorage.removeItem('auth_token')\n      return INITIAL_STATE\n    default:\n      return state\n  }\n}\n\nexport default accountReducer\n","import _ from 'lodash'\nimport {\n  LOGOUT,\n  SELECT_CONVERSATION,\n  CLEAR_SELECT_CONVERSATION,\n  FETCH_CONVERSATION_REQUEST,\n  FETCH_CONVERSATION_SUCCESS,\n  FETCH_CONVERSATION_FAILURE,\n  ON_NEW_CONVERSATION,\n  ON_UPD_CONVERSATION,\n  FETCH_CURRENT_MESSAGES_REQUEST,\n  FETCH_CURRENT_MESSAGES_SUCCESS,\n  FETCH_CURRENT_MESSAGES_FAILURE,\n  CONVERSATION_RECEIVED_MESSAGE\n} from '../actionTypes'\n\nconst INITIAL_STATE = {\n  conversations: [\n    {\n      id: 1,\n      title: 'Hello world',\n      messages: [\n        {\n          id: 1,\n          content: 'Hello',\n          direction: 'out'\n        },\n        {\n          id: 2,\n          content: 'Hi there',\n          direction: 'in'\n        },\n      ] \n    }\n  ],\n  currentConversation: {},\n  loading: false\n}\n\nfunction conversationReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case FETCH_CONVERSATION_REQUEST:\n      return {...state, loading: true}\n    case FETCH_CONVERSATION_SUCCESS:\n      return {...state, conversations: action.payload, loading: false}\n    case FETCH_CONVERSATION_FAILURE:\n      return {...state, conversations: [], loading: false}\n\n    case FETCH_CURRENT_MESSAGES_REQUEST:\n      return {...state, loading: true}\n    case FETCH_CURRENT_MESSAGES_SUCCESS:\n      const { conversation, messages } = action.payload\n      return {...state, loading: false, currentConversation: {...conversation, messages: sortMessages(messages) }}\n    case FETCH_CURRENT_MESSAGES_FAILURE:\n      return {...state, loading: false, currentConversation: {...state.currentConversation, messages: []}}\n\n    case ON_NEW_CONVERSATION:\n      return {...state, conversations: [...state.conversations, action.payload]}\n    case ON_UPD_CONVERSATION:\n      return {...state, conversations: onUpdateConversation(state, action.payload)}\n    \n    case CONVERSATION_RECEIVED_MESSAGE:\n      if (state.currentConversation.id) {\n        const messages = [...state.currentConversation.messages, action.payload]\n        return {...state, currentConversation: {...state.currentConversation, messages: sortMessages(messages) }}\n      } else {\n        return state\n      }\n\n    case SELECT_CONVERSATION:\n      return {...state, conversations: clearUpdatedOnConversation(state, action.payload.id), currentConversation: action.payload}\n    case CLEAR_SELECT_CONVERSATION:\n      return {...state, currentConversation: {}}\n    case LOGOUT:\n      return INITIAL_STATE\n    default:\n      return state\n  }\n}\n\nfunction sortMessages (messages) {\n  return _.orderBy(messages, 'time', 'desc')\n}\n\nfunction clearUpdatedOnConversation (state, convsId) {\n  return state.conversations.map(convs => {\n    if (convs.id !== convsId) return convs;\n    return {...convs, updated: false}\n  })\n}\n\nfunction onUpdateConversation (state, conversation) {\n  return state.conversations.map(convs => {\n    if (convs.id === conversation.id && state.currentConversation.id != conversation.id) {\n      return { ...conversation, updated: true }\n    } else {\n      return convs\n    }\n  })\n}\n\nexport default conversationReducer\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n  SOCKET_REQUEST,\n  SOCKET_CONNECT,\n  SOCKET_FAILURE,\n} from '../actionTypes'\nimport { joinUser, leaveUser } from '../../socket'\n\nconst INITIAL_STATE = {\n  user: null,\n  connected: false,\n  loading: false,\n  socket: null\n}\n\nfunction socketReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {...state, user: action.payload.user}\n    case LOGIN_FAILURE:\n      return {...state, user: null}\n\n    case SOCKET_REQUEST:\n      return {...state, loading: true, connected: false}\n    case SOCKET_CONNECT:\n      return {connected: true, loading: false, socket: action.payload}\n    case SOCKET_FAILURE:\n      leaveUser()\n      return INITIAL_STATE\n\n    case LOGOUT:\n      leaveUser()\n      state.socket && state.socket.disconnect(() => console.log('socket disconnected'))\n      return INITIAL_STATE\n    default:\n      return state\n  }\n}\n\nexport default socketReducer\n","import { combineReducers } from 'redux'\nimport accountReducer from './accountReducer'\nimport conversationReducer from './conversationReducer'\nimport socketReducer from './socketReducer'\n\nexport default combineReducers({\n  account: accountReducer,\n  conversation: conversationReducer,\n  socketConnection: socketReducer\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\nimport App from './App';\nimport theme from './theme';\n\nimport { Provider } from 'react-redux'\n\nimport configureStore from './store'\n\nconst store = configureStore();\n\nexport const registerServiceWorker = () => {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', function () {\n      navigator.serviceWorker.register('/sw.js').then(function (registration) {\n        // Registration was successful\n        //console.log('ServiceWorker registration successful with scope: ', registration.scope);\n      }).catch(function (err) {\n        // registration failed :(\n        //console.log('ServiceWorker registration failed: ', err);\n      });\n    });\n  }\n}\n\nregisterServiceWorker()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={3}>\n        <App />\n      </SnackbarProvider>\n    </Provider>\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\n\nimport rootReducer from './reducers'\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [thunkMiddleware]\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = compose(...enhancers)\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers)\n\n  return store\n}"],"sourceRoot":""}